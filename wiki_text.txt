
Text (Chrome app)
From Wikipedia, the free encyclopedia
Text
Text-app.png
Text main interface
Text main interface
Developer(s)	Google Chrome team
Written in	JavaScript,
HTML
Operating system	Windows; Linux; Mac OS X; Chrome OS
Platform	Cross-platform
Available in	English
Type	Text editor
Website	Chrome Webstore
Text is a Google Chrome packaged app. It functions as a lightweight text editor that is not platform dependent.[1][2] It is offline capable and supports most syntax highlighting.[1][2]

Contents 
1	Features
2	See also
3	References
4	External links
Features
Offline capable
Cross-platform (Google Chrome)
Syntax highlighting
Simultaneous file editing
Edits all plain text files
See also
Google Chrome
Google Chrome Apps
Google Chrome packaged apps
References
 "Text". Chrome Webstore. Google. Retrieved 29 May 2014.
 Tran, Sam. "Get Your Dev On: 5 Offline Text Editor Apps for Chrome". OMG! Chrome. OMG! Chrome. Retrieved 29 May 2014.
External links
Chrome Webstore


Stub icon	This Google-related article is a stub. You can help Wikipedia by expanding it.
Categories: Google ChromeGoogle Chrome apps
Navigation menu
Not logged inTalkContributionsCreate accountLog inArticleTalkReadEditView historySearch

Search Wikipedia
Main page
Contents
Featured content
Current events
Random article
Donate to Wikipedia
Wikipedia store
Interaction
Help
About Wikipedia
Community portal
Recent changes
Contact page
Tools
What links here
Related changes
Upload file
Special pages
Permanent link
Page information
Wikidata item
Cite this page
Print/export
Create a book
Download as PDF
Printable version

Languages
Add links
This page was last edited on 1 March 2018, at 21:37.
Text is available under the Creative Commons Attribution-ShareAlike License; additional terms may apply. By using this site, you agree to the Terms of Use and Privacy Policy. Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a non-profit organization.
Privacy policyAbout WikipediaDisclaimersContact WikipediaDevelopersCookie statementMobile viewWikimedia Foundation Powered by MediaWiki



Text messaging
From Wikipedia, the free encyclopedia
  (Redirected from Text message)
"Txt msg" redirects here. For the TV series, see Pop-Up Video.

A text message as it appears on the display screen of an iPhone before iOS 7.
Text messaging, or texting, is the act of composing and sending electronic messages, typically consisting of alphabetic and numeric characters, between two or more users of mobile phones, tablets, desktops/laptops, or other devices. Text messages may be sent over a cellular network, or may also be sent via an Internet connection.

The term originally referred to messages sent using the Short Message Service (SMS). It has grown beyond alphanumeric text to include multimedia messages (known as MMS) containing digital images, videos, and sound content, as well as ideograms known as emoji (happy faces, sad faces, and other icons).

As of 2017, text messages are used by youth and adults for personal, family and social purposes and in business. Governmental and non-governmental organizations use text messaging for communication between colleagues. As with emailing, in the 2010s, the sending of short informal messages has become an accepted part of many cultures.[1] This makes texting a quick and easy way to communicate with friends and colleagues, including in contexts where a call would be impolite or inappropriate (e.g., calling very late at night or when one knows the other person is busy with family or work activities). Like e-mail and voice mail, and unlike calls (in which the caller hopes to speak directly with the recipient), texting does not require the caller and recipient to both be free at the same moment; this permits communication even between busy individuals. Text messages can also be used to interact with automated systems, for example, to order products or services from e-commerce websites, or to participate in online contests. Advertisers and service providers use direct text marketing to send messages to mobile users about promotions, payment due dates, and other notifications instead of using postal mail, email, or voicemail.

Contents 
1	Terminology
2	History
3	Uses
4	Applications
4.1	Microblogging
4.2	Emergency services
4.3	Reminders of hospital appointments
4.4	Commercial uses
4.4.1	Short codes
4.4.2	Text messaging gateway providers
4.4.3	Premium content
4.5	In workplaces
4.6	Group texts
4.7	Online SMS services
4.8	Worldwide use
4.8.1	Europe
4.8.1.1	Finland
4.8.2	United States
4.8.3	Japan
4.8.4	China
4.8.5	Philippines
4.8.6	New Zealand
4.8.7	Africa
5	Social effects
5.1	Effect on language
5.2	Texting while driving
5.3	Texting while walking
5.4	Sexting
5.5	In schools
5.5.1	Bullying
5.5.2	Influence on perceptions of the student
5.6	Law and crime
5.7	Social unrest
5.8	In politics
5.9	Use in healthcare
5.10	Medical concerns
5.11	Etiquette
6	Challenges
6.1	Spam
6.2	Pricing concerns
6.3	Increasing competition
6.4	Security concerns
7	In popular culture
7.1	Records and competition
7.2	Morse code
8	Tattle texting
8.1	Arena security
8.2	Smart cars
9	See also
10	References
11	External links
Terminology
The service is referred to by different colloquialisms depending on the region. It may simply be referred to as a "text" in North America, the United Kingdom, Australia, New Zealand and the Philippines, an "SMS" in most of mainland Europe, or an "MMS" or "SMS" in the Middle East, Africa, and Asia. The sender of a text message is commonly referred to as a "texter".

History
The electrical telegraph systems, developed in the early 19th century, used simple electrical signals to sent text messages. In the late 19th century, the wireless telegraphy was developed using radio waves.

In 1933, the German Reichspost (Reich postal service) introduced the first "telex" service.[2][3]

The University of Hawaii began using radio to send digital information as early as 1971, using ALOHAnet.[citation needed] Friedhelm Hillebrand conceptualised SMS in 1984 while working for Deutsche Telekom. Sitting at a typewriter at home, Hillebrand typed out random sentences and counted every letter, number, punctuation, and space. Almost every time, the messages contained fewer than 160 characters, thus giving the basis for the limit one could type via text messaging.[4] With Bernard Ghillebaert of France Télécom, he developed a proposal for the GSM (Groupe Spécial Mobile) meeting in February 1985 in Oslo.[5] The first technical solution evolved in a GSM subgroup under the leadership of Finn Trosby. It was further developed under the leadership of Kevin Holley and Ian Harris (see Short Message Service).[6] SMS forms an integral part of SS7 (Signalling System No. 7).[7] Under SS7, it is a "state" with a 160 character data, coded in the ITU-T "T.56" text format, that has a "sequence lead in" to determine different language codes, and may have special character codes that permits, for example, sending simple graphs as text. This was part of ISDN (Integrated Services Digital Network) and since GSM is based on this, made its way to the mobile phone. Messages could be sent and received on ISDN phones, and these can send SMS to any GSM phone. The possibility of doing something is one thing, implementing it another, but systems existed from 1988 that sent SMS messages to mobile phones[citation needed] (compare ND-NOTIS).

SMS messaging was used for the first time on 3 December 1992,[8] when Neil Papworth, a 22-year-old test engineer for Sema Group in the UK[9] (now Airwide Solutions),[10] used a personal computer to send the text message "Merry Christmas" via the Vodafone network to the phone of Richard Jarvis[11][12] who was at a party in Newbury, Berkshire which had been organised to celebrate the event. Modern SMS text messaging is[by whom?] usually messaging from one mobile phone to another mobile phone. Finnish Radiolinja became the first network to offer a commercial person-to-person SMS text messaging service in 1994. When Radiolinja's domestic competitor, Telecom Finland (now part of TeliaSonera) also launched SMS text messaging in 1995 and the two networks offered cross-network SMS functionality, Finland became the first nation where SMS text messaging was offered on a competitive as well as on a commercial basis. GSM was allowed[by whom?] in the United States and the radio frequencies were blocked and awarded to US "Carriers" to use US technology. Hence there is no "development" in the US in mobile messaging service. The GSM in the US had to use a frequency allocated for private communication services (PCS) – what the ITU frequency régime had blocked for DECT – Digital Enhanced Cordless Telecommunications – 1000-feet range picocell, but survived. American Personal Communications (APC), the first GSM carrier in America, provided the first text-messaging service in the United States. Sprint Telecommunications Venture, a partnership of Sprint Corp. and three large cable-TV companies, owned 49 percent of APC. The Sprint venture was the largest single buyer at a government-run spectrum auction that raised $7.7 billion in 2005 for PCS licenses. APC operated under the brand name of Sprint Spectrum and launched its service on November 15, 1995 in Washington, D.C. and in Baltimore, Maryland. Vice President Al Gore in Washington, D.C. made the initial phone-call to launch the network, calling Mayor Kurt Schmoke in Baltimore.[13]

Initial growth of text messaging[where?] was slow, with customers in 1995 sending on average only 0.4 message per GSM customer per month.[14] One factor in the slow take-up of SMS was that operators were slow to set up charging systems, especially for prepaid subscribers, and to eliminate billing fraud, which was possible by changing SMSC settings on individual handsets to use the SMSCs of other operators.[citation needed] Over time, this issue was eliminated by switch-billing instead of billing at the SMSC and by new features within SMSCs to allow blocking of foreign mobile users sending messages through it.[citation needed] SMS is available on a wide range of networks, including 3G networks. However, not all text-messaging systems use SMS; some notable alternate implementations of the concept include J-Phone's SkyMail and NTT Docomo's Short Mail, both in Japan. E-mail messaging from phones, as popularized by NTT Docomo's i-mode and the RIM BlackBerry, also typically use standard mail protocols such as SMTP over TCP/IP.[15] As of 2007 text messaging was the most widely used mobile data service, with 74% of all mobile phone users worldwide, or 2.4 billion out of 3.3 billion phone subscribers, at the end of 2007 being active users of the Short Message Service. In countries such as Finland, Sweden and Norway, over 85% of the population use SMS. The European average is about 80%, and North America is rapidly catching up with over 60% active users of SMS by end of 2008.[citation needed] The largest average usage of the service by mobile phone subscribers occurs in the Philippines, with an average of 27 texts sent per day per subscriber.[citation needed]

Uses

A text message on an iPhone announcing an AMBER Alert
Text messaging is most often used between private mobile phone users, as a substitute for voice calls in situations where voice communication is impossible or undesirable (e.g., during a school class or a work meeting). Texting is also used to communicate very brief messages, such as informing someone that you will be late or reminding a friend or colleague about a meeting. As with e-mail, informality and brevity have become an accepted part of text messaging. Some text messages such as SMS can also be used for the remote controlling of home appliances. It is widely used in domotics systems. Some amateurs have also built own systems to control (some of) their appliances via SMS.[16][17] Other methods such as group messaging, which was patented in 2012 by the GM of Andrew Ferry, Devin Peterson, Justin Cowart, Ian Ainsworth, Patrick Messinger, Jacob Delk, Jack Grande, Austin Hughes, Brendan Blake, and Brooks Brasher are used to involve more than two people into a text messaging conversation[citation needed]. A Flash SMS is a type[18] of text message that appears directly on the main screen without user interaction and is not automatically stored in the inbox. It can be useful in cases such as an emergency (e.g., fire alarm) or confidentiality (e.g., one-time password).[19]

Short message services are developing very rapidly throughout the world. SMS is particularly popular in Europe, Asia (excluding Japan; see below), United States, Australia and New Zealand and is also gaining influence in Africa. Popularity has grown to a sufficient extent that the term texting (used as a verb meaning the act of mobile phone users sending short messages back and forth) has entered the common lexicon. Young Asians consider SMS as the most popular mobile phone application.[20] Fifty percent of American teens send fifty text messages or more per day, making it their most frequent form of communication.[21] In China, SMS is very popular and has brought service providers significant profit (18 billion short messages were sent in 2001).[22] It is a very influential and powerful tool in the Philippines, where the average user sends 10–12 text messages a day. The Philippines alone sends on average over 1 billion text messages a day,[23] more than the annual average SMS volume of the countries in Europe, and even China and India. SMS is hugely popular in India, where youngsters often exchange lots of text messages, and companies provide alerts, infotainment, news, cricket scores updates, railway/airline booking, mobile billing, and banking services on SMS.

Texting became popular in the Philippines in 1998. In 2001, text messaging played an important role in deposing former Philippine president Joseph Estrada. Similarly, in 2008, text messaging played a primary role in the implication of former Detroit Mayor Kwame Kilpatrick in an SMS sex scandal.[24] Short messages are particularly popular among young urbanites. In many markets, the service is comparatively cheap. For example, in Australia, a message typically costs between A$0.20 and $0.25 to send (some prepaid services charge $0.01 between their own phones), compared with a voice call, which costs somewhere between $0.40 and $2.00 per minute (commonly charged in half-minute blocks). The service is enormously profitable to the service providers. At a typical length of only 190 bytes (including protocol overhead), more than 350 of these messages per minute can be transmitted at the same data rate as a usual voice call (9 kbit/s). There are also free SMS services available, which are often sponsored and allow sending SMS from a PC connected to the internet. Mobile service providers in New Zealand, such as Vodafone and Telecom NZ, provide up to 2000 SMS messages for NZ$10 per month. Users on these plans send on average 1500 SMS messages every month. Text messaging has become so popular that advertising agencies and advertisers are now jumping into the text messaging business. Services that provide bulk text message sending are also becoming a popular way for clubs, associations, and advertisers to reach a group of opt-in subscribers quickly.

Research suggests that Internet-based mobile messaging will have grown to equal the popularity of SMS in 2013, with nearly 10 trillion messages being sent through each technology.[25][26] Services such as Facebook Messenger, WhatsApp and Viber have led to a decline in the use of SMS in parts of the world.

Applications
Microblogging
Main article: Microblogging
Of many texting trends, a system known as microblogging has surfaced, which consists of a miniaturized blog, inspired mainly by people's tendency to jot down informal thoughts and post them online. They consist of websites like Twitter and its Chinese equivalent Weibo (微博). As of 2016, both of these websites were popular.

Emergency services
In some countries, text messages can be used to contact emergency services. In the UK, text messages can be used to call emergency services only after registering with the emergency SMS service. This service is primarily aimed at people who, by reason of disability, are unable to make a voice call. It has recently been promoted as a means for walkers and climbers to call[27][28] emergency services from areas where a voice call is not possible due to low signal strength. In the US, there is a move to require both traditional operators and Over-the-top messaging providers to support texting to 911.[29] In Asia, SMS is used for tsunami warnings and in Europe, SMS is used to inform individuals of imminent disaster. Since the location of a handset is known, systems can alert everyone in an area that the events has made impossible to pass through e.g. an avalanche. A similar system known as Emergency Alert is used in Australia to notify the public of impending disasters through both SMS and landline phone calls.These messages can be sent based on either the location of the phone or the address to which the handset is registered.

Reminders of hospital appointments
SMS messages are used in some countries as reminders of hospital appointments. Missed outpatient clinic appointments cost the National Health Service (England) more than £600 million ($980 million) a year[30] SMS messages are thought to be more cost effective, swifter to deliver, and more likely to receive a faster response than letters. A recent study by Sims and colleagues (2012) examined the outcomes of 24,709 outpatient appointments scheduled in mental health services in South-East London. The study found that SMS message reminders could reduce the number of missed psychiatric appointments by 25–28%, representing a potential national yearly saving of over £150 million.[31]

Commercial uses

A multimedia message displayed on a mobile phone
Short codes
Short codes are special telephone numbers, shorter than full telephone numbers, that can be used to address SMS and MMS messages from mobile phones or fixed phones. There are two types of short codes: dialing and messaging.

Text messaging gateway providers
SMS gateway providers facilitate the SMS traffic between businesses and mobile subscribers, being mainly responsible for carrying mission-critical messages, SMS for enterprises, content delivery and entertainment services involving SMS, e.g., TV voting. Considering SMS messaging performance and cost, as well as the level of text messaging services, SMS gateway providers can be classified as resellers of the text messaging capability of another provider's SMSC or offering the text messaging capability as an operator of their own SMSC with SS7.[32][33] SMS messaging gateway providers can provide gateway-to-mobile (Mobile Terminated–MT) services. Some suppliers can also supply mobile-to-gateway (text-in or Mobile Originated/MO services). Many operate text-in services on shortcodes or mobile number ranges, whereas others use lower-cost geographic text-in numbers.[34]

Premium content

This section does not cite any sources. Please help improve this section by adding citations to reliable sources. Unsourced material may be challenged and removed. (July 2008) (Learn how and when to remove this template message)
SMS is widely used for delivering digital content, such as news alerts, financial information, pictures, GIFs, logos and ringtones. Such messages are also known as premium-rated short messages (PSMS).[35] The subscribers are charged extra for receiving this premium content, and the amount is typically divided between the mobile network operator and the value added service provider (VASP), either through revenue share or a fixed transport fee. Services like 82ASK and Any Question Answered have used the PSMS model to enable rapid response to mobile consumers' questions, using on-call teams of experts and researchers. In November 2013, amidst complaints about unsolicited charges on bills, major mobile carriers in the US agreed to stop billing for PSMS in 45 states, effectively ending its use in the United States.[36]

Outside the United States, premium short messages are increasingly being used for "real-world" services. For example, some vending machines now allow payment by sending a premium-rated short message, so that the cost of the item bought is added to the user's phone bill or subtracted from the user's prepaid credits. Recently, premium messaging companies have come under fire from consumer groups due to a large number of consumers racking up huge phone bills. A new type of free-premium or hybrid-premium content has emerged with the launch of text-service websites. These sites allow registered users to receive free text messages when items they are interested in go on sale, or when new items are introduced. An alternative to inbound SMS is based on long numbers (international mobile number format, e.g., +44 7624 805000, or geographic numbers that can handle voice and SMS, e.g., 01133203040[34]), which can be used in place of short codes or premium-rated short messages for SMS reception in several applications, such as TV voting, product promotions, and campaigns. Long numbers are internationally available, as well as enabling businesses to have their own number, rather than short codes, which are usually shared across a lot of brands. Additionally, Long numbers are non-premium inbound numbers.

In workplaces
The use of text messaging for workplace purposes has grown significantly during the mid-2000s (decade). As companies seek competitive advantages, many employees are using new technology, collaborative applications, and real-time messaging such as SMS, instant messaging, and mobile communications to connect with teammates and customers. Some practical uses of text messaging include the use of SMS for confirming delivery or other tasks, for instant communication between a service provider and a client (e.g., stock broker and investor), and for sending alerts. Several universities have implemented a system of texting students and faculties campus alerts. One such example is Penn State.[37] As text messaging has proliferated in business, so too have regulations governing its use. One regulation specifically governing the use of text messaging in financial-services firms engaged in stocks, equities, and securities trading is Regulatory Notice 07-59, Supervision of Electronic Communications, December 2007, issued to member firms by the Financial Industry Regulatory Authority. In 07-59, FINRA noted that "electronic communications", "e-mail", and "electronic correspondence" may be used interchangeably and can include such forms of electronic messaging as instant messaging and text messaging.[38] Industry has had to develop new technology to allow companies to archive their employees' text messages.

Security, confidentiality, reliability and speed of SMS are among the most important guarantees industries such as financial services, energy and commodities trading, health care and enterprises demand in their mission-critical procedures. One way to guarantee such a quality of text messaging lies in introducing SLAs (Service Level Agreement), which are common in IT contracts. By providing measurable SLAs, corporations can define reliability parameters and set up a high quality of their services.[39] Just one of many SMS applications that has proven highly popular and successful in the financial-services industry is mobile receipts. In January 2009, Mobile Marketing Association (MMA) published the Mobile Banking Overview for financial institutions in which it discussed the advantages and disadvantages of mobile channel platforms such as Short Message Services (SMS), Mobile Web, Mobile Client Applications, SMS with Mobile Web and Secure SMS.[40]

Mobile interaction services are an alternative way of using SMS in business communications with greater certainty. Typical business-to-business applications are telematics and Machine-to-Machine, in which two applications automatically communicate with each other. Incident alerts are also common, and staff communications are also another use for B2B scenarios. Businesses can use SMS for time-critical alerts, updates and reminders, mobile campaigns, content and entertainment applications. Mobile interaction can also be used for consumer-to-business interactions, such as media voting and competitions, and for consumer-to-consumer interaction, for example, with mobile social networking, chatting and dating.

Text messaging is widely used on business settings; as well, it is used in a number of civil service and non-governmental organization workplaces. The U.S. And Canadian civil service both adopted Blackberry smartphones in the 2000s.

Group texts
Group texts involve more than two users. In some cases, when one or more person on the group text is offline, in airplane mode, or has their device shut down, a text being sent to the group may reveal an error message that the text did not go through. Users should rest assured, that all online or available users on the group received the message and that re-sending the message will only result in some participants receiving the message multiple times.

Online SMS services
There are a growing number of websites that allow users to send free SMS messages online. Some websites provide free SMS for promoting premium business packages.[citation needed]

Worldwide use
Europe

SMS is used to send "welcome" messages to mobile phones roaming between countries. Here, T-Mobile welcomes a Proximus subscriber to the UK, and BASE welcomes an Orange UK customer to Belgium.
Europe follows next behind Asia in terms of the popularity of the use of SMS. In 2003, an average of 16 billion messages were sent each month. Users in Spain sent a little more than fifty messages per month on average in 2003. In Italy, Germany and the United Kingdom, the figure was around 35–40 SMS messages per month. In each of these countries, the cost of sending an SMS message varies from €0.04–0.23, depending on the payment plan (with many contractual plans including all or a number of texts for free). In the United Kingdom, text messages are charged between £0.05–0.12. Curiously, France has not taken to SMS in the same way, sending just under 20 messages on average per user per month. France has the same GSM technology as other European countries, so the uptake is not hampered by technical restrictions.

In the Republic of Ireland, 1.5 billion messages are sent every quarter, on average 114 messages per person per month.[41] In the United Kingdom over 1 billion text messages are sent every week.[42] The Eurovision Song Contest organized the first pan-European SMS voting in 2002, as a part of the voting system (there was also a voting over traditional landline phone lines). In 2005, the Eurovision Song Contest organized the biggest televoting ever (with SMS and phone voting). During roaming, that is, when a user connects to another network in different country from his own, the prices may be higher, but in July 2009, EU legislation went into effect limiting this price to €0.11.[43]

Finland

This section does not cite any sources. Please help improve this section by adding citations to reliable sources. Unsourced material may be challenged and removed. (July 2008) (Learn how and when to remove this template message)
Mobile-service providers in Finland offer contracts in which users can send 1000 text messages a month for €10. In Finland, which has very high mobile phone ownership rates, some TV channels began "SMS chat", which involved sending short messages to a phone number, and the messages would be shown on TV. Chats are always moderated, which prevents users from sending offensive material to the channel. The craze evolved into quizzes and strategy games and then faster-paced games designed for television and SMS control. Games require users to register their nickname and send short messages to control a character onscreen. Messages usually cost 0.05 to 0.86 Euro apiece, and games can require the player to send dozens of messages. In December 2003, a Finnish TV channel, MTV3, put a Santa Claus character on air reading aloud text messages sent in by viewers. On 12 March 2004, the first entirely "interactive" TV channel, VIISI, began operation in Finland. However, SBS Finland Oy took over the channel and turned it into a music channel named The Voice in November 2004. In 2006, the Prime Minister of Finland, Matti Vanhanen, made the news when he allegedly broke up with his girlfriend with a text message.[citation needed] In 2007, the first book written solely in text messages, Viimeiset viestit (Last Messages), was released by Finnish author Hannu Luntiala. It is about an executive who travels through Europe and India.

United States
In the United States, text messaging is very popular; as reported by CTIA in December 2009, the 286 million US subscribers sent 152.7 billion text messages per month, for an average of 534 messages per subscriber per month.[44] The Pew Research Center found in May 2010 that 72% of U.S. adult cellphone users send and receive text messages.[45] In the U.S., SMS is often charged both at the sender and at the destination, but, unlike phone calls, it cannot be rejected or dismissed. The reasons for lower uptake than other countries are varied. Many users have unlimited "mobile-to-mobile" minutes, high monthly minute allotments, or unlimited service. Moreover, "push to talk" services offer the instant connectivity of SMS and are typically unlimited. The integration between competing providers and technologies necessary for cross-network text messaging was not initially available. Some providers originally charged extra for texting, reducing its appeal. In the third quarter of 2006, at least 12 billion text messages were sent on AT&T's network, up almost 15% from the preceding quarter. In the U.S., while texting is mainly popular among people from 13–22 years old, it is also increasing among adults and business users. The age that a child receives his/her first cell phone has also decreased, making text messaging a popular way of communicating. The number of texts sent in the US has gone up over the years as the price has gone down to an average of $0.10 per text sent and received. To convince more customers to buy unlimited text messaging plans, some major cellphone providers have increased the price to send and receive text messages from $.15 to $.20 per message.[46][47] This is over $1,300 per megabyte.[48] Many providers offer unlimited plans, which can result in a lower rate per text, given sufficient volume.

Japan
Japan was among the first countries to adopt short messages widely, with pioneering non-GSM services including J-Phone's SkyMail and NTT Docomo's Short Mail. Japanese adolescents first began text messaging, because it was a cheaper form of communication than the other available forms. Thus, Japanese theorists created the selective interpersonal relationship theory, claiming that mobile phones can change social networks among young people (classified as 13- to 30-year-olds). They theorized this age group had extensive but low-quality relationships with friends, and mobile-phone usage may facilitate improvement in the quality of their relationships. They concluded this age group prefers "selective interpersonal relationships in which they maintain particular, partial, but rich relations, depending on the situation."[49][50] The same studies showed participants rated friendships in which they communicated face-to-face and through text messaging as being more intimate than those in which they communicated solely face-to-face. This indicates participants make new relationships with face-to-face communication at an early stage, but use text messaging to increase their contact later on. It is also interesting to note that as the relationships between participants grew more intimate, the frequency of text messaging also increased. However, short messaging has been largely rendered obsolete by the prevalence of mobile Internet e-mail, which can be sent to and received from any e-mail address, mobile or otherwise. That said, while usually presented to the user simply as a uniform "mail" service (and most users are unaware of the distinction), the operators may still internally transmit the content as short messages, especially if the destination is on the same network.

China
Text messaging is popular and cheap in China. About 700 billion messages were sent in 2007. Text message spam is also a problem in China. In 2007, 353.8 billion spam messages were sent, up 93% from the previous year. It is about 12.44 messages per week per person. It is routine that the People's Republic of China government monitor text messages across the country for illegal content.[51] Among Chinese migrant workers with little formal education, it is common to refer to SMS manuals when text messaging. These manuals are published as cheap, handy, smaller-than-pocket-size booklets that offer diverse linguistic phrases to utilize as messages.[52]

Philippines
SMS was introduced to selected markets in the Philippines in 1995. In 1998, Philippine mobile-service providers launched SMS more widely across the country, with initial television marketing campaigns targeting hearing-impaired users. The service was initially free with subscriptions, but Filipinos quickly exploited the feature to communicate for free instead of using voice calls, which they would be charged for. After telephone companies realized this trend, they began charging for SMS. The rate across networks is 1 peso per SMS (about US$0.023). Even after users were charged for SMS, it remained cheap, about one-tenth of the price of a voice call. This low price led to about five million Filipinos owning a cell phone by 2001.[53] Because of the highly social nature of Philippine culture and the affordability of SMS compared to voice calls, SMS usage shot up. Filipinos used texting not only for social messages but also for political purposes, as it allowed the Filipinos to express their opinions on current events and political issues.[54] It became a powerful tool for Filipinos in promoting or denouncing issues and was a key factor during the 2001 EDSA II revolution, which overthrew then-President Joseph Estrada, who was eventually found guilty of corruption. According to 2009 statistics, there are about 72 million mobile-service subscriptions (roughly 80% of the Filipino population), with around 1.39 billion SMS messages being sent daily.[55][56] Because of the large amount of text messages being sent, the Philippines became known as the "text capital of the world" during the late 1990s until the early 2000s.[55][56]

New Zealand
There are three mobile network companies in New Zealand. Spark NZ (formally Telecom NZ), was the first telecommunication company in New Zealand. In 2011, Spark was broken into two companies, with Chorus Ltd taking the landline infrastructure and Spark NZ providing services including over their mobile network. Vodafone NZ acquired mobile network provider Bellsouth New Zealand in 1998 and has 2.32 million customers as of July 2013.[57][58] Vodafone launched the first Text messaging service in 1999[59] and has introduced innovative TXT services like Safe TXT and CallMe[60] 2degrees Mobile Ltd launched in August 2009. In 2005, around 85% of the adult population had a mobile phone.[61] In general, texting is more popular than making phone calls, as it is viewed as less intrusive and therefore more polite.

Africa
Text messaging will become a key revenue driver for mobile network operators in Africa over the next couple of years.[62] Today, text messaging is already slowly gaining influence in the African market. One such person used text messaging to spread the word about HIV and AIDS.[63] Also, in September 2009, a multi-country campaign in Africa used text messaging to expose stock-outs of essential medicines at public health facilities and put pressure on governments to address the issue.[64]

Social effects
The advent of text messaging made possible new forms of interaction that were not possible before. A person may now carry out a conversation with another user without the constraint of being expected to reply within a short amount of time and without needing to set time aside to engage in conversation. With voice calling, both participants need to be free at the same time. Mobile phone users can maintain communication during situations in which a voice call is impractical, impossible, or unacceptable, such as during a school class or work meeting. Texting has provided a venue for participatory culture, allowing viewers to vote in online and TV polls, as well as receive information while they are on the move. Texting can also bring people together and create a sense of community through "Smart Mobs" or "Net War", which create "people power".[53] Research has also proven that text messaging is somehow making the social distances larger and could be ruining verbal communication skills for many people.[65]

Effect on language

This section needs additional citations for verification. Please help improve this article by adding citations to reliable sources. Unsourced material may be challenged and removed. (August 2008) (Learn how and when to remove this template message)
Main article: SMS language

This sticker seen in Paris satirizes the popularity of communication in SMS shorthand. In French: "Is that you? / It's me! / Do you love me? / Shut up!"
The small phone keypad and the rapidity of typical text message exchanges has caused a number spelling abbreviations: as in the phrase "txt msg", "u" (an abbreviation for "you"), "HMU", or use of CamelCase, such as in "ThisIsVeryLame". To avoid the even more limited message lengths allowed when using Cyrillic or Greek letters, speakers of languages written in those alphabets often use the Latin alphabet for their own language. In certain languages utilizing diacritic marks, such as Polish, SMS technology created an entire new variant of written language: characters normally written with diacritic marks (e.g., ą, ę, ś, ż in Polish) are now being written without them (as a, e, s, z) to enable using cell phones without Polish script or to save space in Unicode messages. Historically, this language developed out of shorthand used in bulletin board systems and later in Internet chat rooms, where users would abbreviate some words to allow a response to be typed more quickly, though the amount of time saved was often inconsequential. However, this became much more pronounced in SMS, where mobile phone users either have a numeric keyboard (with older cellphones) or a small QWERTY keyboard (for 2010s-era smartphones), so more effort is required to type each character, and there is sometimes a limit on the number of characters that may be sent. In Mandarin Chinese, numbers that sound similar to words are used in place of those words. For example, the numbers 520 in Chinese (wǔ èr líng) sound like the words for "I love you" (wǒ ài nǐ). The sequence 748 (qī sì bā) sounds like the curse "go to hell" (qù sǐ ba).

Predictive text software, which attempts to guess words (Tegic's T9 as well as iTap) or letters (Eatoni's LetterWise) reduces the labour of time-consuming input. This makes abbreviations not only less necessary, but slower to type than regular words that are in the software's dictionary. However, it makes the messages longer, often requiring the text message to be sent in multiple parts and, therefore, costing more to send. The use of text messaging has changed the way that people talk and write essays, some[66] believing it to be harmful. Children today are receiving cell phones at an age as young as eight years old; more than 35 percent of children in second and third grade have their own mobile phone. Because of this, the texting language is integrated into the way that students think from an earlier age than ever before.[67] In November 2006, New Zealand Qualifications Authority approved the move that allowed students of secondary schools to use mobile phone text language in the end-of-the-year-exam papers.[68] Highly publicized reports, beginning in 2002, of the use of text language in school assignments caused some to become concerned that the quality of written communication is on the decline,[34] and other reports claim that teachers and professors are beginning to have a hard time controlling the problem.[34] However, the notion that text language is widespread or harmful is refuted by research from linguistic experts.[69]

An article in The New Yorker explores how text messaging has anglicized some of the world's languages. The use of diacritic marks is dropped in languages such as French, as well as symbols in Ethiopian languages. In his book, Txtng: the Gr8 Db8 (which translates as "Texting: the Great Debate"), David Crystal states that texters in all eleven languages use "lol" ("laughing out loud"), "u", "brb" ("be right back"), and "gr8" ("great"), all English-based shorthands. The use of pictograms and logograms in texts are present in every language. They shorten words by using symbols to represent the word or symbols whose name sounds like a syllable of the word such as in 2day or b4. This is commonly used in other languages as well. Crystal gives some examples in several languages such as Italian sei, "six", is used for sei, "you are". Example: dv6 = dove sei ("where are you") and French k7 = cassette ("casette"). There is also the use of numeral sequences, substituting for several syllables of a word and creating whole phrases using numerals. For example, in French, a12c4 can be said as à un de ces quatres, "see you around" (literally: "to one of these four [days]"). An example of using symbols in texting and borrowing from English is the use of @. Whenever it is used in texting, its intended use is with the English pronunciation. Crystal gives the example of the Welsh use of @ in @F, pronounced ataf, meaning "to me". In character-based languages such as Chinese and Japanese, numbers are assigned syllables based on the shortened form of the pronunciation of the number, sometimes the English pronunciation of the number. In this way, numbers alone can be used to communicate whole passages, such as in Chinese, "8807701314520" can be literally translated as "Hug hug you, kiss kiss you, whole life, whole life I love you." English influences worldwide texting in variation but still in combination with the individual properties of languages.[70]

American popular culture is also recognized in shorthand. For example, Homer Simpson translates into: ~(_8^(|).[71] Crystal also suggests that texting has led to more creativity in the English language, giving people opportunities to create their own slang, emoticons, abbreviations, acronyms, etc. The feeling of individualism and freedom makes texting more popular and a more efficient way to communicate.[72] Crystal has also been quoted in saying that "In a logical world, text messaging should not have survived." But text messaging didn't just come out of nowhere. It originally began as a messaging system that would send out emergency information. But it gained immediate popularity with the public. What followed is the SMS we see today, which is a very quick and efficient way of sharing information from person to person. Work by Richard Ling has shown that texting has a gendered dimension and it plays into the development of teen identity.[73] In addition we text to a very small number of other persons. For most people, half of their texts go to 3 – 5 other people.[74]

Research by Rosen et al. (2009)[75] found that those young adults who used more language-based textisms (shortcuts such as LOL, 2nite, etc.) in daily writing produced worse formal writing than those young adults who used fewer linguistic textisms in daily writing. However, the exact opposite was true for informal writing. This suggests that perhaps the act of using textisms to shorten communication words leads young adults to produce more informal writing, which may then help them to be better "informal" writers. Due to text messaging, teens are writing more, and some teachers see that this comfort with language can be harnessed to make better writers. This new form of communication may be encouraging students to put their thoughts and feelings into words and this may be able to be used as a bridge, to get them more interested in formal writing.[according to whom?]

Joan H. Lee in her thesis What does txting do 2 language: The influences of exposure to messaging and print media on acceptability constraints (2011)[76] associates exposure to text messaging with more rigid acceptability constraints. The thesis suggests that more exposure to the colloquial, Generation Text language of text messaging contributes to being less accepting of words. In contrast, Lee found that students with more exposure to traditional print media (such as books and magazines) were more accepting of both real and fictitious words. The thesis, which garnered international media attention, also presents a literature review of academic literature on the effects of text messaging on language. Texting has also been shown to have had no effect or some positive effects on literacy. According to Plester, Wood and Joshi and their research done on the study of 88 British 10–12-year-old children and their knowledge of text messages, "textisms are essentially forms of phonetic abbreviation" that show that "to produce and read such abbreviations arguably requires a level of phonological awareness (and orthographic awareness) in the child concerned."[77]

Texting while driving

A driver with attention divided between a mobile phone and the road ahead
Main article: Texting while driving
Texting while driving leads to increased distraction behind the wheel and can lead to an increased risk of an accident. In 2006, Liberty Mutual Insurance Group conducted a survey with more than 900 teens from over 26 high schools nationwide. The results showed that 87% of students found texting to be "very" or "extremely" distracting.[78] A study by AAA found that 46% of teens admitted to being distracted behind the wheel due to texting. One example of distraction behind the wheel is the 2008 Chatsworth train collision, which killed 25 passengers. The engineer had sent 45 text messages while operating the train.[citation needed] A 2009 experiment with Car and Driver editor Eddie Alterman (that took place at a deserted air field, for safety reasons) compared texting with drunk driving. The experiment found that texting while driving was more dangerous than being drunk. While being legally drunk added four feet to Alterman's stopping distance while going 70 mph, reading an e-mail on a phone added 36 feet, and sending a text message added 70 feet.[79] In 2009, the Virginia Tech Transportation Institute released the results of an 18-month study that involved placing cameras inside the cabs of more than 100 long-haul trucks, which recorded the drivers over a combined driving distance of three million miles. The study concluded that when the drivers were texting, their risk of crashing was 23 times greater than when not texting.[80]

Texting while walking
Due to the proliferation of smart phone applications performed while walking, "texting while walking" or "wexting" is the increasing practice of people being transfixed to their mobile device without looking in any direction but their personal screen while walking. First coined reference in 2015 in New York from Rentrak's chief client officer[81] when discussing time spent with media and various media usage metrics. Text messaging among pedestrians leads to increased cognitive distraction and reduced situation awareness, and may lead to increases in unsafe behavior leading to injury and death.[82][83] Recent studies conducted on cell phone use while walking showed that cell phone users recall fewer objects when conversing,[84] walk slower,[82][85] have altered gait[83][86] and are more unsafe when crossing a street.[84] Additionally, some gait analyses showed that stance phase during overstepping motion, longitudinal and lateral deviation increased during cell phone operation but step length and clearance did not;[82][86] a different analysis did find increased step clearance and reduced step length.[83]

It is unclear which processes may be affected by distraction, which types of distraction may affect which cognitive processes, and how individual differences may affect the influence of distraction.[87] Lamberg and Muratori believe that engaging in a dual-task, such as texting while walking, may interfere with working memory and result in walking errors.[82] Their study demonstrated that participants engaged in text messaging were unable to maintain walking speed or retain accurate spatial information, suggesting an inability to adequately divide their attention between two tasks. According to them, the addition of texting while walking with vision occluded increases the demands placed on the working memory system resulting in gait disruptions.[82]

Texting on a phone distracts participants, even when the texting task used is a relatively simple one.[85] Stavrinos et al. investigated the effect of other cognitive tasks, such as engaging in conversations or cognitive tasks on a phone, and found that participants actually have reduced visual awareness.[88] This finding was supported by Licence et al., who conducted a similar study.[83] For example, texting pedestrians may fail to notice unusual events in their environment, such as a unicycling clown.[89] These findings suggest that tasks that require the allocation of cognitive resources can affect visual attention even when the task itself does not require the participants to avert their eyes from their environment. The act of texting itself seems to impair pedestrians' visual awareness. It appears that the distraction produced by texting is a combination of both a cognitive and visual perceptual distraction.[85] A study conducted by Licence et al. supported some of these findings, particularly that those who text while walking significantly alter their gait. However, they also found that the gait pattern texters adopted was slower and more "protective", and consequently did not increase obstacle contact or tripping in a typical pedestrian context.[83]

There have also been technological approaches to increase the safety/awareness of pedestrians that are (inattentionally) blind while using a smart phone, e.g., using a Kinect[90] or an ultrasound phone cover[91] as a virtual white cane, or using the built-in camera to algorithmically analyze single,[92] respectively a stream of pictures[93] for obstacles, with Wang et al. proposing to use machine learning to specifically detect incoming vehicles.[94]

Sexting
Main article: Sexting
Sexting is slang for the act of sending sexually explicit or suggestive content between mobile devices using SMS.[95] A genre of texting, it contains either text, images, or video that is intended to be sexually arousing. A portmanteau of sex and texting, sexting was reported as early as 2005 in The Sunday Telegraph Magazine,[96] constituting a trend in the creative use of SMS to excite another with alluring messages throughout the day.[97]

Although sexting often takes place consensually between two people, it can also occur against the wishes of a person who is the subject of the content.[95] A number of instances have been reported in which the recipients of sexting have shared the content of the messages with others, with less intimate intentions, such as to impress their friends or embarrass their sender. Celebrities such as Miley Cyrus, Vanessa Hudgens, and Adrienne Bailon have been victims of such abuses of sexting.[98] A 2008 survey by The National Campaign to Prevent Teen and Unplanned Pregnancy and CosmoGirl.com[99] suggested a trend of sexting and other seductive online content being readily shared between teens. One in five teen girls surveyed (22 percent)—and 11 percent of teen girls aged 13–16 years old—say they have electronically sent, or posted online, nude or semi-nude images of themselves. One-third (33 percent) of teen boys and one-quarter (25 percent) of teen girls say they were shown private nude or semi-nude images. According to the survey, sexually suggestive messages (text, e-mail, and instant messaging) were even more common than images, with 39 percent of teens having sent or posted such messages, and half of teens (50 percent) having received them. A 2012 study that has received wide international media attention was conducted at the University of Utah Department of Psychology by Donald S. Strassberg, Ryan Kelly McKinnon, Michael Sustaíta and Jordan Rullo. They surveyed 606 teenagers ages 14–18 and found that nearly 20 percent of the students said they had sent a sexually explicit image of themselves via cell phone, and nearly twice as many said that they had received a sexually explicit picture. Of those receiving such a picture, over 25 percent indicated that they had forwarded it to others.

In addition, of those who had sent a sexually explicit picture, over a third had done so despite believing that there could be serious legal and other consequences if they got caught. Students who had sent a picture by cell phone were more likely than others to find the activity acceptable. The authors conclude: "These results argue for educational efforts such as cell phone safety assemblies, awareness days, integration into class curriculum and teacher training, designed to raise awareness about the potential consequences of sexting among young people."[100][101][102][103][104][105][106][107][108][109][110] Sexting becomes a legal issue when teens (under 18) are involved, because any nude photos they may send of themselves would put the recipients in possession of child pornography.[111]

In schools

Two girls text during class at school
Text messaging has affected students academically by creating an easier way to cheat on exams. In December 2002, a dozen students were caught cheating on an accounting exam through the use of text messages on their mobile phones.[112] In December 2002, Hitotsubashi University in Japan failed 26 students for receiving e-mailed exam answers on their mobile phones.[113] The number of students caught using mobile phones to cheat on exams has increased significantly in recent years. According to Okada (2005), most Japanese mobile phones can send and receive long text messages of between 250 and 3000 characters with graphics, video, audio, and Web links.[114] In England, 287 school and college students were excluded from exams in 2004 for using mobile phones during exams.[115] Some teachers and professors claim that advanced texting features can lead to students cheating on exams.[116] Students in high school and college classrooms are using their mobile phones to send and receive texts during lectures at high rates. Further, published research has established that students who text during college lectures have impaired memories of the lecture material compared to students who do not.[117] For example, in one study, the number of irrelevant text messages sent and received during a lecture covering the topic of developmental psychology was related to students' memory of the lecture.[118]

Bullying
Main article: Cyberbullying
Spreading rumors and gossip by text message, using text messages to bully individuals, or forwarding texts that contain defamatory content is an issue of great concern for parents and schools. Text "bullying" of this sort can cause distress and damage reputations. In some cases, individuals who are bullied online have committed suicide. Harding and Rosenberg (2005) argue that the urge to forward text messages can be difficult to resist, describing text messages as "loaded weapons".[119]

Influence on perceptions of the student
When a student sends an email that contains phonetic abbreviations and acronyms that are common in text messaging (e.g., "gr8" instead of "great"), it can influence how that student is subsequently evaluated. In a study by Lewandowski and Harrington (2006), participants read a student's email sent to a professor that either contained text-messaging abbreviations (gr8, How R U?) or parallel text in standard English (great, How are you?), and then provided impressions of the sender.[120] Students who used abbreviations in their email were perceived as having a less favorable personality and as putting forth less effort on an essay they submitted along with the email. Specifically, abbreviation users were seen as less intelligent, responsible, motivated, studious, dependable, and hard-working. These findings suggest that the nature of a student's email communication can influence how others perceive the student and their work.

Law and crime
Text messaging has been a subject of interest for police forces around the world. One of the issues of concern to law enforcement agencies is the use of encrypted text messages. In 2003, a British company developed a program called Fortress SMS which used 128 bit AES encryption to protect SMS messages.[121] Police have also retrieved deleted text messages to aid them in solving crimes. For example, Swedish police retrieved deleted texts from a cult member who claimed she committed a double murder based on forwarded texts she received.[122] Police in Tilburg, Netherlands, started an SMS alert program, in which they would send a message to ask citizens to be vigilant when a burglar was on the loose or a child was missing in their neighborhood. Several thieves have been caught and children have been found using the SMS Alerts. The service has been expanding to other cities.[123] A Malaysian–Australian company has released a multi-layer SMS security program.[124] Boston police are now turning to text messaging to help stop crime. The Boston Police Department asks citizens to send texts to make anonymous crime tips.[125]

Under some interpretations of sharia law, husbands can divorce their wives by the pronouncement of talaq. In 2003, a court in Malaysia upheld such a divorce pronouncement which was transmitted via SMS.[126]

The Massachusetts Supreme Judicial Court ruled in 2017 that under the state constitution, police require a warrant before obtaining access to text messages without consent.[127]

Social unrest
Texting has been used on a number of occasions with the result of the gathering of large aggressive crowds. SMS messaging drew a crowd to Cronulla Beach in Sydney resulting in the 2005 Cronulla riots. Not only were text messages circulating in the Sydney area, but in other states as well (Daily Telegraph). The volume of such text messages and e-mails also increased in the wake of the riot.[128] The crowd of 5000 at stages became violent, attacking certain ethnic groups. Sutherland Shire Mayor directly blamed heavily circulated SMS messages for the unrest.[129] NSW police considered whether people could be charged over the texting.[130] Retaliatory attacks also used SMS.[131]

The Narre Warren Incident, when a group of 500 party goers attended a party at Narre Warren in Melbourne, Australia, and rioted in January 2008, also was a response of communication being spread by SMS and Myspace.[132] Following the incident, the Police Commissioner wrote an open letter asking young people to be aware of the power of SMS and the Internet.[133] In Hong Kong, government officials find that text messaging helps socially because they can send multiple texts to the community. Officials say it is an easy way of contacting community or individuals for meetings or events.[134] Texting was used to coordinate gatherings during the 2009 Iranian election protests.

Between 2009 and 2012 the U.S. secretly created and funded a Twitter-like service for Cubans called ZunZuneo, initially based on mobile phone text message service and later with an internet interface. The service was funded by the U.S. Agency for International Development through its Office of Transition Initiatives, who utiliized contractors and front companies in the Cayman Islands, Spain and Ireland. A longer term objective was to organize "smart mobs" that might "renegotiate the balance of power between the state and society." A database about the subscribers was created, including gender, age, and "political tendencies". At its peak ZunZuneo had 40,000 Cuban users, but the service closed as financially unsustainable when U.S. funding was stopped.[135][136]

In politics

A text message that (he says) promises 500 Libyan dinars ($400) to anyone who "makes noise" in support of Gaddafi in the coming days

A recruitment ban in French SMS language: «Slt koi29 on é jamé 2tro @ s batre pour la P. ;-)» = «Salut! Quoi de neuf? On n'est jamais de trop à se battre pour la Paix!»
Text messaging has affected the political world. American campaigns find that text messaging is a much easier, cheaper way of getting to the voters than the door-to-door approach.[137] Mexico's president-elect Felipe Calderón launched millions of text messages in the days immediately preceding his narrow win over Andres Manuel Lopez Obradór.[138] In January 2001, Joseph Estrada was forced to resign from the post of president of the Philippines. The popular campaign against him was widely reported to have been co-ordinated with SMS chain letters.[138] A massive texting campaign was credited with boosting youth turnout in Spain's 2004 parliamentary elections.[138] In 2008, Detroit Mayor Kwame Kilpatrick and his Chief of Staff at the time became entangled in a sex scandal stemming from the exchange of over 14,000 text messages that eventually led to his forced resignation, conviction of perjury, and other charges.[24] Text messaging has been used to turn down other political leaders. During the 2004 U.S. Democratic and Republican National Conventions, protesters used an SMS-based organizing tool called TXTmob to get to opponents.[139] In the last day before the 2004 presidential elections in Romania, a message against Adrian Năstase was largely circulated, thus breaking the laws that prohibited campaigning that day. Text messaging has helped politics by promoting campaigns.

On 20 January 2001, President Joseph Estrada of the Philippines became the first head of state in history to lose power to a smart mob.[53] More than one million Manila residents assembled at the site of the 1986 People Power peaceful demonstrations that has toppled the Marcos regime. These people have organized themselves and coordinated their actions through text messaging. They were able to bring down a government without having to use any weapons or violence. Through text messaging, their plans and ideas were communicated to others and successfully implemented. Also, this move encouraged the military to withdraw their support from the regime, and as a result, the Estrada government fell.[53] People were able to converge and unite with the use of their cell phones. "The rapid assembly of the anti-Estrada crowd was a hallmark of early smart mob technology, and the millions of text messages exchanged by the demonstrators in 2001 was, by all accounts, a key to the crowds esprit de corps."[53]

Use in healthcare

Some health organizations manage text messaging services to help people avoid smoking
Text messaging is a rapidly growing trend in Healthcare.[when?] "One survey found that 73% of physicians text other physicians about work- similar to the overall percentage of the population that texts."[citation needed] A 2006 study of reminder messages sent to children and adolescents with type 1 diabetes mellitus showed favorable changes in adherence to treatment.[140] A risk is that these physicians could be violating the Health Insurance Portability and Accountability Act. Where messages could be saved to a phone indefinitely, patient information could be subject to theft or loss, and could be seen by other unauthorized persons. The HIPAA privacy rule requires that any text message involving a medical decision must be available for the patient to access, meaning that any texts that are not documented in an EMR system could be a HIPAA violation.[141][142]

Medical concerns
Main article: BlackBerry thumb
The excessive use of the thumb for pressing keys on mobile devices has led to a high rate of a form of repetitive strain injury termed "BlackBerry thumb" (although this refers to strain developed on older Blackberry devices, which had a scroll wheel on the side of the phone). An inflammation of the tendons in the thumb caused by constant text-messaging is also called text-messager's thumb, or texting tenosynovitis.[143] Texting has also been linked as a secondary source in numerous traffic collisions, in which police investigations of mobile phone records have found that many drivers have lost control of their cars while attempting to send or retrieve a text message. Increasing cases of Internet addiction are now also being linked to text messaging, as mobile phones are now more likely to have e-mail and Web capabilities to complement the ability to text.

Etiquette
Texting etiquette refers to what is considered appropriate texting behavior. These expectations may concern different areas, such as the context in which a text was sent and received/read, who each participant was with when the participant sent or received/read a text message or what constitutes impolite text messages.[144] At the website of The Emily Post Institute, the topic of texting has spurred several articles with the "do's and dont's" regarding the new form of communication. One example from the site is: "Keep your message brief. No one wants to have an entire conversation with you by texting when you could just call him or her instead."[145] Another example is: "Don't use all Caps. Typing a text message in all capital letters will appear as though you are shouting at the recipient, and should be avoided."

Expectations for etiquette may differ depending on various factors. For example, expectations for appropriate behavior have been found to differ markedly between the U.S. and India.[144] Another example is generational differences. In The M-Factor: How the Millennial Generation Is Rocking the Workplace, Lynne Lancaster and David Stillman note that younger Americans often do not consider it rude to answer their cell or begin texting in the middle of a face-to-face conversation with someone else, while older people, less used to the behavior and the accompanying lack of eye contact or attention, find this to be disruptive and ill-mannered.[citation needed] With regard to texting in the workplace, Plantronics studied how we communicate at work and found that 58% of US knowledge workers have increased the use of text messaging for work in the past five years. The same study found that 33% of knowledge workers felt text messaging was critical or very important to success and productivity at work.[146]

Challenges
Spam
Further information: Mobile phone spam
In 2002, an increasing trend towards spamming mobile phone users through SMS prompted cellular-service carriers to take steps against the practice, before it became a widespread problem. No major spamming incidents involving SMS had been reported as of March 2007, but the existence of mobile phone spam[147] has been noted by industry watchdogs including Consumer Reports magazine and the Utility Consumers' Action Network (UCAN). In 2005, UCAN brought a case against Sprint for spamming its customers and charging $0.10 per text message.[148] The case was settled in 2006 with Sprint agreeing not to send customers Sprint advertisements via SMS.[149] SMS expert Acision (formerly LogicaCMG Telecoms) reported a new type of SMS malice at the end of 2006, noting the first instances of SMiShing (a cousin to e-mail phishing scams). In SMiShing, users receive SMS messages posing to be from a company, enticing users to phone premium-rate numbers or reply with personal information. Similar concerns were reported by PhonepayPlus, a consumer watchdog in the United Kingdom, in 2012.[150]

Pricing concerns
Concerns have been voiced[151] over the excessive cost of off-plan text messaging in the United States. AT&T Mobility, along with most other service providers, charges texters 20 cents per message if they do not have a messaging plan or if they have exceeded their allotted number of texts. Given that an SMS message is at most 160 bytes in size, this cost scales to a cost of $1,310[151] per megabyte sent via text message. This is in sharp contrast with the price of unlimited data plans offered by the same carriers, which allow the transmission of hundreds of megabytes of data for monthly prices of about $15 to $45 in addition to a voice plan. As a comparison, a one-minute phone call uses up the same amount of network capacity as 600 text messages,[152] meaning that if the same cost-per-traffic formula were applied to phone calls, cell phone calls would cost $120 per minute. With service providers gaining more customers and expanding their capacity, their overhead costs should be decreasing, not increasing. In 2005, text messaging generated nearly 70 billion dollars in revenue, as reported by Gartner, industry analysts, three times as much as Hollywood box office sales in 2005. World figures showed that over a trillion text messages were sent in 2005.[153]

Although major cellphone providers deny any collusion, fees for out-of-package text messages have increased, doubling from 10 to 20 cents in the United States between 2007 and 2008 alone.[154] On 16 July 2009, Senate hearings were held to look into any breach of the Sherman Antitrust Act.[155] The same trend is visible in other countries, though increasingly widespread flatrate plans, for example in Germany, do make text messaging easier, text messages sent abroad still result in higher costs.

Increasing competition
While text messaging is still a growing market, traditional SMS are becoming increasingly challenged by alternative messaging services which are available on smartphones with data connections. These services are much cheaper and offer more functionality like exchanging of multimedia content (e.g. photos, videos or audio notes) and group messaging. Especially in western countries some of these services attract more and more users.[156]

Security concerns
Consumer SMS should not be used for confidential communication. The contents of common SMS messages are known to the network operator's systems and personnel. Therefore, consumer SMS is not an appropriate technology for secure communications.[157] To address this issue, many companies use an SMS gateway provider based on SS7 connectivity to route the messages. The advantage of this international termination model is the ability to route data directly through SS7, which gives the provider visibility of the complete path of the SMS. This means SMS messages can be sent directly to and from recipients without having to go through the SMS-C of other mobile operators. This approach reduces the number of mobile operators that handle the message; however, it should not be considered as an end-to-end secure communication, as the content of the message is exposed to the SMS gateway provider.

An alternative approach is to use end-to-end security software that runs on both the sending and receiving device, where the original text message is transmitted in encrypted form as a consumer SMS. By using key rotation, the encrypted text messages stored under data retention laws at the network operator cannot be decrypted even if one of the devices is compromised. A problem with this approach is that communicating devices needs to run compatible software. Failure rates without backward notification can be high between carriers.[citation needed]. International texting can be unreliable depending on the country of origin, destination and respective operators (US: "carriers"). Differences in the character sets used for coding can cause a text message sent from one country to another to become unreadable.

In popular culture
Records and competition
The Guinness Book of World Records has a world record for text messaging, currently held by Sonja Kristiansen of Norway. Kristiansen keyed in the official text message, as established by Guinness, in 37.28 seconds.[158] The message is, "The razor-toothed piranhas of the genera Serrasalmus and Pygocentrus are the most ferocious freshwater fish in the world. In reality, they seldom attack a human."[158] In 2005, the record was held by a 24-year-old Scottish man, Craig Crosbie, who completed the same message in 48 seconds, beating the previous time by 19 seconds.[159] The Book of Alternative Records lists Chris Young of Salem, Oregon, as the world-record holder for the fastest 160-character text message where the contents of the message are not provided ahead of time. His record of 62.3 seconds was set on 23 May 2007.[160]

Elliot Nicholls of Dunedin, New Zealand, currently holds the world record for the fastest blindfolded text messaging. A record of a 160-letter text in 45 seconds while blindfolded was set on 17 November 2007, beating the old record of 1-minute 26 seconds set by an Italian in September 2006.[161] Ohio native Andrew Acklin is credited with the world record for most text messages sent or received in a single month, with 200,052. His accomplishments were first in the World Records Academy and later followed up by Ripley's Believe It Or Not 2010: Seeing Is Believing. He has been acknowledged by The Universal Records Database for the most text messages in a single month; however, this has since been broken twice and as of 2010 was listed as 566607 messages by Fred Lindgren.[162]

In January 2010, LG Electronics sponsored an international competition, the LG Mobile World Cup, to determine the fastest pair of texters. The winners were a team from South Korea, Ha Mok-min and Bae Yeong-ho.[163] On 6 April 2011, SKH Apps released an iPhone app, iTextFast, to allow consumers to test their texting speed and practice the paragraph used by Guinness Book of World Records. As of 2011, best time listed on Game Center for that paragraph is 34.65 seconds.[164]

Morse code
A few competitions have been held between expert Morse code operators and expert SMS users.[165] Several mobile phones have Morse code ring tones and alert messages. For example, many Nokia mobile phones have an option to beep "S M S" in Morse code when it receives a short message. Some of these phones could also play the Nokia slogan "Connecting people" in Morse code as a message tone.[166] There are third-party applications available for some mobile phones that allow Morse input for short messages.[167][168][169]

Tattle texting
"Tattle texting" can mean either of two different texting trends:

Arena security
Many sports arenas now offer a number where patrons can text report security concerns, like drunk or unruly fans, or safety issues like spills.[170][171] These programs have been praised by patrons and security personnel as more effective than traditional methods. For instance, the patron doesn't need to leave his seat and miss the event in order to report something important. Also, disruptive fans can be reported with relative anonymity. "Text tattling" also gives security personnel a useful tool to prioritize messages. For instance, a single complaint in one section about an unruly fan can be addressed when convenient, while multiple complaints by several different patrons can be acted upon immediately.

Smart cars
In this context, "tattle texting" refers to an automatic text sent by the computer in an automobile, because a preset condition was met.[citation needed] The most common use for this is for parents to receive texts from the car their child is driving, alerting them to speeding or other issues. Employers can also use the service to monitor their corporate vehicles. The technology is still new and (currently) only available on a few car models.

Common conditions that can be chosen to send a text are:

Speeding. With the use of GPS, stored maps, and speed limit information, the onboard computer can determine if the driver is exceeding the current speed limit. The device can store this information and/or send it to another recipient.
Range. Parents/employers can set a maximum range from a fixed location after which a "tattle text" is sent. Not only can this keep children close to home and keep employees from using corporate vehicles inappropriately, but it can also be a crucial tool for quickly identifying stolen vehicles, car jackings, and kidnappings.
See also
Instant messaging
Messaging apps
Chat language
Enhanced Messaging Service
Mobile dial code
Operator messaging
Telegram
Tironian notes, scribal abbreviations and ligatures: Roman and medieval abbreviations used to save space on manuscripts and epigraphs
References
 Morris, Robert; Pinchot, Jamie (2010). "Conference on Information Systems Applied Research" (PDF). How Mobile Technology is Changing Our Culture. 3: 10 – via CONISAR.
 "Fifty years of telex". Telecommunication Journal. International Telecommunication Union. 51: 35. 1984. Retrieved 2017-05-18. Just over fifty years ago, in October 1933, the Deutsche Reichspost as it was then known, opened the world's first public teleprinter network.
 Herbst, Kris; Ubois, Jeff (November 14, 1988). "The competition". Network World. 5 (46). IDG Network World Inc. p. 68. ISSN 0887-7661. Retrieved 2017-12-29. Telex originated in Germany and rapidly expanded to other countries after World War II.
 "The Text Message Turns 20: A Brief History of SMS". theweek.com. Retrieved 2016-02-02. 1984 [...] Sitting at a typewriter at his home in Bonn, Germany, Friedhelm Hillebrand types random sentences and questions, counting every letter, number, and space. Almost every time, the messages amount to fewer than 160 characters — what would become the limit of early text messages — and thus the concept for the perfect-length, rapid-fire 'short message' was born.
 GSM document 19/85, available in the ETSI archive
 Hillebrand, ed. (2010). Short Message Service, the Creation of Personal Global Text Messaging. Wiley. ISBN 978-0-470-68865-6.
 ITU-T, ed. (1993). Introduction to CCITT Signalling System No. 7. ITU.
 Ariel Bogle (3 December 2017). "It's been 25 years since the first-ever text message and the kids are alright". Australian Broadcasting Corporation.
 Ahmed, Rashmee Z (4 December 2002). "UK hails 10th birthday of SMS". The Times of India. Retrieved 2010-02-02.
 "Airwide Solutions Says Happy 15th Birthday to SMS". Press release. Airwide Solutions. 5 December 2007. Archived from the original on 2008-11-19. Retrieved 2016-02-02. In December 1992, Airwide was responsible for delivering the first ever SMS. The message, delivered on the Vodafone network, said 'Merry Christmas' [...].
 Shannon, Victoria (5 December 2007). "15 years of text messages, a 'cultural phenomenon'". The New York Times. Retrieved 2010-02-02.
 Snowden, Collette (2006). "Casting a Powerful Spell: The Evolution of SMS". In Anandam P. Kavoori and Noah Arceneaux. The Cell Phone Reader: Essays in Social Transformation. New York: Peter Lang. pp. 107–08. ISBN 978-0-8204-7919-4.
 PCS network launched in Baltimore-D.C. area First system in nation offers digital challenge to cellular phone industry – tribunedigital-baltimoresun. Articles.baltimoresun.com (1995-11-16). Retrieved on 2015-06-08.
 "GSM World press release". gsmworld.com. 12 February 2001. Archived from the original on 15 February 2002.
 "TCP/IP Internetworking With 'gawk'". Gnu.org.
 ELEKTOR.nl (12 May 2011). "Using SMS to control devices; amateur-built system based on ATM18". Elektor.nl. Retrieved 29 March 2012.
 ELEKTOR.com. "An ATM18 system for sms'ing your car to give away his position". Elektor.com. Retrieved 29 March 2012.
 "SMS types on". Routomessaging.com. Archived from the original on 2013-09-06. Retrieved 29 March 2012.
 "Flash SMS on". Sms-wiki.org. Retrieved 29 March 2012.
 "Living the fast, young life in Asia". synovate.com. Archived from the original on 6 March 2012.
 NGAK, CHENDA. "Teens are sending 60 texts a day, study says". CBS NEWS. Retrieved March 19, 2012.
 "News report on text rates for 2001". tymcc.com.cn. Archived from the original on 5 April 2004.
 "Filipinos sent 1 billion text messages". technology.inquirer.net. Philippine Daily Inquirer. 4 March 2008. Archived from the original on 2011-05-10.
 HULIQ. "Detroit Mayor Kwame Kilpatrick, Christine Beatty in Sex SMS Scandal". Huliq.com. Retrieved 29 March 2012.
 Crocker, Peter (15 January 2013). "Converged-mobile-messaging analysis and forecasts" (PDF). tyntec.com. Retrieved 23 January 2013.
 "Mobile and SMS interaction service conducts study that says that IP-based mobile messaging will be just as popular as traditional SMS" mobile news, 23 January 2013.Retrieved: 23 January 2013
 "Mountaineering Council of Scotland news 24/11/10". Mcofs.org.uk. 24 November 2010. Retrieved 29 March 2012.
 "goforawalk.com news December 2010". Go4awalk.com. Retrieved 29 March 2012.
 "911 Services And Text Messaging". 9-1-1Colorado Foundation. Retrieved 2014-02-10.
 Lakhani, Nina. (24 September 2011) Text reminders could save NHS millions – Health News – Health & Families. The Independent. Retrieved on 2012-04-05.
 Sims, H., Sanghara, H., Hayes, D., Wandiembe, S., Finch, M., Jakobsen, H., Tsakanikos, E., Okocha, C.I., Kravariti, E. (2012). "Text message reminders of appointments: a pilot intervention at four community mental health clinics in london". Psychiatric Services. 63 (2): 161–8. doi:10.1176/appi.ps.201100211. PMID 22302334.
 HSL Mobile Messaging "Infrastructure – HSL's SMS Message Delivery Network", hslsms.com, accessed 14 June 2011.
 BudgetSMS SMS Gateway "BudgetSMS's HTTP Docs", budgetsms.net, accessed 14 June 2011.
 Andrew Orlowski Cheapo textable landline numbers for all. The Register (2008-04-18)
 "Short Message Service (SMS)".
 Bud, Andrew. "Privacy and trust: The implications of U.S. carriers ending premium SMS billing". VentureBeat. VentureBeat. Retrieved 17 January 2017.
 "Penn State Live – PSUTXT test a success". Live.psu.edu. 31 March 2008. Retrieved 29 March 2012.
 "FINRA, Regulatory Notice 07-59, Supervision of Electronic Communications, December 2007". Finra.org. Archived from the original on 2008-05-18. Retrieved 29 March 2012.
 "TynTec calls for industry benchmarked SMS service level agreements" Archived 3 March 2016 at the Wayback Machine. Mobile Industry Review (29 April 2008)
 Mobile Banking Overview (NA). mmaglobal.com January 2009
 "RTE article on Ireland SMS usage". Rte.ie. 26 September 2006. Retrieved 29 March 2012.
 Mobile Data Association. "The UK's definitive text related information source". Text.it. Archived from the original on 2 April 2012. Retrieved 29 March 2012.
 "The new proposal for reducing roaming prices". Retrieved 2010-06-23.
 "Wireless Quick Facts". CTIA. Archived from the original on 20 April 2010.
 Kristen Purcell; Roger Entner; Nichole Henderson (15 September 2010). "The Rise of Apps Culture" (PDF). Pew Research Center’s Internet & American Life Project.
 "Sprint Nextel Text Messaging". Archived from the original on 25 March 2010.
 "Notice of Text Messaging Increase". Verizon Wireless. Archived from the original on May 19, 2010.
 "Sen. to carriers: Why do text messages cost $1,300 per meg?". ZDNet. 10 September 2008. Archived from the original on 11 September 2008.
 Igarashi, T., Takai, J., & Yoshida, T. (2005). "Gender differences in social network development via mobile phone text messages: A longitudinal study". Journal of Social and Personal Relationships. 22 (5): 691–713. doi:10.1177/0265407505056492.
 Ishii, Kenichi (2006). "Implications of Mobility: The Uses of Personal Communication Media in Everyday Life". Journal of Communication. 56 (2): 346–365. doi:10.1111/j.1460-2466.2006.00023.x.
 Lafraniere, Sharon (20 January 2010). "China to Scan Text Messages to Spot 'Unhealthy Content'". The New York Times.
 Lin, Angel & Tong, Avin (2008). "Mobile Cultures of Migrant Workers in Southern China: Informal Literacies in the Negotiation of (New) Social Relations of the New Working Women". Knowledge, Technology & Policy. 21 (2): 73–81. doi:10.1007/s12130-008-9045-9.
 Rheingold, Howard (2002) Smart Mobs: the Next Social Revolution, Perseus, Cambridge, Massachusetts, pp. xi–xxii, 157–82 ISBN 0-7382-0861-2.
 Manila's Talk of the Town Is Text Messaging. Partners.nytimes.com. Retrieved on 2012-04-05.
 Research and Markets: Philippines – Telecoms, Mobile and Broadband. Business Wire (23 August 2010). Retrieved on 2012-04-05.
 The Philippines Reaffirms Status As "Text Messaging Capital Of The World". Wayodd.com. Retrieved on 2012-04-05.
 Vodafone boosts mobile customers, ending long run of losses | The National Business Review. Nbr.co.nz (2013-07-22). Retrieved on 2015-06-08.
 Company information from the Vodafone New Zealand website
 Vodafone history timeline. Vodafone.co.nz. Retrieved on 2015-06-08.
 "A free TXT service to say Call Me". Archived from the original on 2015-01-10.
 "Smoking cessation using mobile phone text messaging is as effective in Māori as non-Māori". The New Zealand Medical Journal. 118 (1216). 3 June 2005. Archived from the original on 24 November 2009. More than 85% of young New Zealand adults now have a mobile phone (statistics by ethnicity are not available), and text messaging among this age group has rapidly developed into a new communications medium.
 "Text Messaging will be Huge for Mobile Operators in Africa". thepinehillsnews.com. 17 March 2009. Archived from the original on 2 April 2012. Retrieved 29 March 2012.
 "Silence = Death. In South Africa, text messages can end the silence". Brian S Hall. 28 March 2011. Archived from the original on 2011-08-12. Retrieved 29 March 2012.
 "AFRICA: Text messages highlight drug stock-outs". PlusNews. 17 September 2009. Archived from the original on 27 September 2011. Retrieved 29 March 2012.
 Shoeb Adnan (14 March 2015). "5 Negative Effects of Mobile Phone In Our Social Life".
 "Instant Messaging: Friend or Foe of Student Writing?". Newhorizons.org. Retrieved 29 March 2012.
 Boswell, Sean. "Lost in Translation: Texting Killing Human Communication Skills". DePaulia online. Archived from the original on 2014-03-11. Retrieved 2012-10-18.
 "Officials: Students can use 'text speak' on tests". USA Today. 13 November 2006. Retrieved 25 May 2010.
 Crace, John (16 September 2008). "Gr8 db8r takes on linguistic luddites: Language guru David Crystal tells John Crace that txt spk is responsible for neither bad spelling nor moral decay". The Guardian. UK. Retrieved 29 March 2012.
 Crystal, David Txtng: the gr8 db8. New York: Oxford University Press, 2008. pp. 131–137 ISBN 0-19-162340-7
 The New Yorker "Thumbspeak" Menand, Louis. 20 October 2008.
 Crystal, David: the gr8 db8. New York: Oxford University Press, 2008. Print.
 ""Girls Text Really Weird": Gender, Texting and Identity Among Teens". Journal of Children and Media. 8: 423–439. doi:10.1080/17482798.2014.931290.
 "The socio-demographics of texting".
 Rosen, L.D., Chang, J., Erwin, L., Carrier, L.M., & Cheever, N.A. (2010). "The Relationship Between "Textisms" and Formal and Informal Writing Among Young Adults". Communication Research. 37 (3): 420–440. doi:10.1177/0093650210362465.
 "What does txting do 2 language: The influences of exposure to messaging and print media on acceptability constraints". Archived from the original on 2012-02-20. Retrieved 9 March 2012.
 Plester, B.; Wood, C.; Joshi, P. (2009). "Exploring the relationship between children's knowledge of text message abbreviations and school literacy outcomes". British Journal of Developmental Psychology. 27 (Pt 1): 145–61. doi:10.1348/026151008X320507. PMID 19972666.
 "Teens Admit Text Messaging Most Distracting While Driving". Liberty Mutual Group. 19 July 2007. Archived from the original on 19 November 2008. Retrieved 2010-02-05.
 Texting And Driving Worse Than Drinking and Driving, CNBC, 25 June 2009
 In Study, Texting Lifts Crash Risk by Large Margin, The New York Times, 27 July 2009
 "Rentrak executive bios" (PDF).
 Lamberg, E. M.; Muratori, L. M. (2012). "Cell phones change the way we walk". Gait & Posture. 35 (4): 688–90. doi:10.1016/j.gaitpost.2011.12.005. PMID 22226937.
 Sammy Licence; et al. (29 July 2015). "Gait Pattern Alterations during Walking, Texting and Walking and Texting during Cognitively Distractive Tasks while Negotiating Common Pedestrian Obstacles". PLOS ONE. 10: e0133281. doi:10.1371/journal.pone.0133281. Retrieved 3 August 2015.
 Nasar, J; Hecht, P; Wener, R (2008). "Mobile telephones, distracted attention, and pedestrian safety". Accident Analysis & Prevention. 40 (1): 69–75. doi:10.1016/j.aap.2007.04.005. PMID 18215534.
 Lopresti-Goodman, S. M.; Rivera, A.; Dressel, C. (2012). "Practicing Safe Text: The Impact of Texting on Walking Behavior". Applied Cognitive Psychology. 26 (4): 644–648. doi:10.1002/acp.2846.
 Uchiyama, M; Demura, S.; Natsuhori, E. (2012). "Changes in gait properties during texting messages by a cell phone. Attention and gait control". 171 (3). Gazzetta Medica Italiana Archivio per le Scienze Mediche: 331–340.
 Schwebel, D. C.; Stavrinos, D; Byington, K. W.; Davis, T; O'Neal, E. E.; De Jong, D (2012). "Distraction and pedestrian safety: How talking on the phone, texting, and listening to music impact crossing the street". Accident Analysis & Prevention. 45: 266–71. doi:10.1016/j.aap.2011.07.011. PMC 3266515 Freely accessible. PMID 22269509.
 Stavrinos, D.; Byington, K. W.; Schwebel, D. C. (2011). "Distracted walking: Cell phones increase injury risk for college pedestrians". Journal of Safety Research. 42 (2): 101–107. doi:10.1016/j.jsr.2011.01.004.
 Hyman, S.M.; Boss, I.E.; Wise, B.M.; McKenzie, K.E.; Caggiano, J.M. (2010). "Did you see the unicycling clown? Inattentional blindness while walking and talking on a cell phone". Applied Cognitive Psychology. 29 (5): 597–607. doi:10.1002/acp.1638.
 Hincapié-Ramos, Juan David; Irani, Pourang (1 January 2013). "CrashAlert: Enhancing Peripheral Alertness for Eyes-busy Mobile Interaction While Walking". Proceedings of the SIGCHI Conference on Human Factors in Computing Systems. ACM: 3385–3388. doi:10.1145/2470654.2466463.
 "Samsung Releasing Smartphone-Paired Technologies for Blind People". medGadget. Retrieved 10 November 2016.
 Peng, En; Peursum, Patrick; Li, Ling; Venkatesh, Svetha (26 October 2010). "A Smartphone-Based Obstacle Sensor for the Visually Impaired". International Conference on Ubiquitous Intelligence and Computing. Springer Berlin Heidelberg: 590–604. doi:10.1007/978-3-642-16355-5_45.
 Foerster, Klaus-Tycho; Gross, Alex; Hail, Nino; Uitto, Jara; Wattenhofer, Roger (1 January 2014). "SpareEye: Enhancing the Safety of Inattentionally Blind Smartphone Users". Proceedings of the 13th International Conference on Mobile and Ubiquitous Multimedia. ACM: 68–72. doi:10.1145/2677972.2677973.
 Wang, Tianyu; Cardone, Giuseppe; Corradi, Antonio; Torresani, Lorenzo; Campbell, Andrew T. (1 January 2012). "WalkSafe: A Pedestrian Safety App for Mobile Phone Users Who Walk and Talk While Crossing Roads". Proceedings of the Twelfth Workshop on Mobile Computing Systems & Applications. ACM: 5:1–5:6. doi:10.1145/2162081.2162089.
 Encyclopedia of Risks and Threats. MySecureCyberspace. Retrieved on 2009-01-13.
 Roberts, Yvonne (31 July 2005). "The One and Only". p. 22. Following a string of extramarital affairs and several lurid "sexting" episodes, Warne has found himself home alone, with Simone Warne taking their three children and flying the conjugal coop.
 Texting: From Faux Pas to Faux Sex From the Mind of GrandDiva. Retrieved on 2009-01-13.
 Sexting with friends is the new High School "note" XYHD.TV. Retrieved on 2009-01-13.
 "Sex and Tech Survey". Thenationalcampaign.org. Retrieved 29 March 2012.
 Strassberg, Donald; McKinnon, Ryan K. (7 June 2012). "Sexting by High School Students: An Exploratory and Descriptive Study". Archives of Sexual Behavior. 42: 15–21. doi:10.1007/s10508-012-9969-8. PMID 22674035.
 Maffly, Brian. "'Sexting' prevalent among high-schoolers, study finds". Salt Lake Tribune. Retrieved 5 July 2012.
 Collins, Lois. "As many as 20% of teens have 'sexted', according to new study". Deseret News. Retrieved 4 July 2012.
 "Sending Sexually Explicit Photos by Cell Phone Is Common Among Teens". Science Daily. Retrieved 5 July 2012.
 "U Study Finds 'Sexting' More Common Among Teens Than You Might Think".
 "'Sexting' Prevalent Among High-Schoolers, Study Finds". Centers for Disease Control and Prevention National Prevention Information Network. Archived from the original on 14 April 2013. Retrieved 5 July 2012.
 Nauert, Rick. "1 in 5 Teens 'Sexting' – Many Without a Clue". PsychCentral. Retrieved 4 July 2012.
 "U study: More teens 'sext' than previously thought". Fox 13 News. Retrieved 4 July 2012.
 "Most teens unaware about legal consequences of sexting: Study". Times of India. Archived from the original on 2012-06-15. Retrieved 5 July 2012.
 "Sexting is More Common Among Teens Than Previously Thought, Say Researchers". International Business Times. Retrieved 5 July 2012.
 "Why teens indulge in so much 'sexting'?". Hindustan Times. Archived from the original on 2014-03-06. Retrieved 5 July 2012.
 Connie Schultz: Making kids to tell law's naked truth is the perfect sentence The Plain Dealer. 2008-12-13. Archived 1 February 2009 at Archive.is
 "Maryland Newsline – Business & Tech Special Report: Teens and Technology". Newsline.umd.edu. 17 May 2006. Archived from the original on 23 March 2012. Retrieved 29 March 2012.
 Top News – Students dial up trouble in new twist to cheating Archived 5 July 2009 at the Wayback Machine.
 Okada, T. (2005). Youth culture and shaping of Japanese mobile media: personalization and the keitainInternet as multimedia, in M. Ito, D. Okabe and M. Matsuda (eds), Personal, Portable, Pedestrian: Mobile Phones in Japanese Life, Cambridge, Massachusetts: MIT Press ISBN 0-262-09039-2
 "Exams ban for mobile phone users". BBC News. 15 April 2005. Retrieved 25 May 2010.
 Goggin, G (2006) Cell Phone Culture: Mobile technology in everyday life. New York: Routledge ISBN 0-415-36744-1
 Carrier, L. M.; Rosen, L. D.; Cheever, N. A.; Lim, A. (2015). "Causes, effects, and practicalities of everyday multitasking". Developmental Review. 35: 64–78. doi:10.1016/j.dr.2014.12.005. Special issue on Living in the "Net" Generation: Multitasking, Learning and Development.
 Rosen, L. D.; Lim, A. F.; Carrier, L. M.; Cheever, N. A. (2011). "An Empirical Examination of the Educational Impact of Text Message-Induced Task Switching in the Classroom: Educational Implications and Strategies to Enhance Learning". Psicología Educativa (Spain). 17: 163–77. doi:10.5093/ed2011v17n2a4.
 Harding, S. & Rosenberg, D. (Ed). (2005). Histories of the Future. London: Duke University Press, p. 84 ISBN 0-8223-3473-9
 Lewandowski, Gary; Harrington, Samantha (2006). "The influence of phonetic abbreviations on evaluation of student performance" (PDF). Current Research in Social Psychology. 11 (15): 215–226. Archived from the original (PDF) on 5 January 2014.
 Fortress SMS technical report
 Robert Burnett; Ylva Hård af Segerstad (8 September 2005). "The SMS murder mystery" in Safety and Security in a Networked World. Balancing Cyber-Rights & Responsibilities, Oxford Internet Institute.
 "SMS Alert Service for Dutch Police". textually.org. 8 December 2005. Retrieved 29 March 2012.
 CryptoSMS – Crypto for Criminals
 Weiss, Todd R. (18 June 2007). "Boston police turn to text messages to fight crime". Computerworld.com. Archived from the original on 2014-01-09. Retrieved 29 March 2012.
 "Malaysia permits text message divorce". 27 July 2003 – via news.bbc.co.uk.
 "A Warrant Is Needed To Obtain Text Messages, State High Court Rules". www.wbur.org.
 SMS Riot: Transmitting Race on a Sydney Beach, December 2005 M/C Journal, Volume 9, Iss. 1, March 2006
 Text messages 'fuel trouble'. National – smh.com.au 11 December 2005
 Police consider SMS Cronulla messages 'a crime'. ABC News. 9 December 2005
 Kennedy, Les. "Man in court over Cronulla revenge SMS", The Sydney Morning Herald, 2006-12-06. Retrieved on 2006-08-31.
 Police probe how 500 teens got party invite – National. theage.com.au (13 January 2008). Retrieved on 2012-04-05.
 Christine, By. (15 January 2008) We were all young once, but teens need limits. News.com.au. Retrieved on 2012-04-05.
 "The Social Impacts of Mobile Phones and Text Messaging". Dgp.toronto.edu. Archived from the original on 17 February 2008. Retrieved 29 March 2012.
 Arce, Alberto; Butler, Desmond; Gillum, Jack (3 April 2014). "U'S' secretly created 'Cuban Twitter' to stir unrest". Washington Post. Associated Press. Archived from the original on 3 April 2014. Retrieved 6 April 2014.
 Olson, Parmy (4 April 2014). "Why The U'S' Government's Fake 'Cuban Twitter' Service Failed". Forbes. Retrieved 6 April 2014.
 "In politics, blogs and text messages are the new American way". International Herald Tribune. 29 March 2009. Archived from the original on 2006-09-08. Retrieved 29 March 2012.
 "Text Messaging in U.S. Politics". Newsweek. 1 August 2006. Retrieved 29 March 2012.
 "TxtMob". TxtMob. Retrieved 29 March 2012.
 Patrick, K.; Griswold, W. G.; Raab, F; Intille, S. S. (2008). "Health and the mobile phone". American Journal of Preventive Medicine. 35 (2): 177–81. doi:10.1016/j.amepre.2008.05.001. PMC 2527290 Freely accessible. PMID 18550322.
 Terry, Ken (2012-10-31). "Text Messaging Between Clinicians Increasing in Hospitals". Information Week. Retrieved 2013-12-19.
 "HIPAA compliant messaging for healthcare providers". OnPage. Retrieved 2018-01-10.
 New Zealand woman diagnosed with text thumb. textually.org (23 December 2007). Retrieved on 2012-04-05.
 Shuter, Robert; Chattopadhyay, Sumana (2010). "Emerging Interpersonal Norms of Text Messaging in India and the United States". Journal of Intercultural Communication Research. 29 (2): 123–147. doi:10.1080/17475759.2010.526319.
 "Text Messaging". Emilypost.com. Archived from the original on 2008-01-26. Retrieved 29 March 2012.
 By Alison Diana, InformationWeek. "Executives Demand Communications Arsenal." 30 September 2010. Retrieved 11 October 2010.
 "Accident Claim Text Scam". Kathirvel.com. 7 July 2010. Retrieved 29 March 2012.
 Sprint and Cingular Named in Complaints. NY Times. July 21, 2005
 "UCAN report on Sprint SPAM SMS settlement". Ucan.org. 5 October 2006. Archived from the original on 2007-07-18. Retrieved 29 March 2012.
 "Warning over 'scam' that charges users to receive texts". bbc.co.uk. 28 March 2012. Retrieved 29 September 2014.
 "AT&T's text messages cost $1,310 per megabyte". Crunchgear.com. 1 July 2008. Retrieved 29 March 2012.
 Ashley Jones"Texting prices rise as carriers make profits – News & Opinion – The Daily Universe". Archived from the original on 28 March 2010. Retrieved 2011-04-09. . universe.byu.edu (2009-07-28)
 Crystal, David (2008). txting; the gr8 db8. New York: Oxford. pp. 4–5. ISBN 978-0-19-954490-5.
 Albanesius, Chloe (16 June 2009). "AT&T, Verizon Deny Text-Message Price Fixing". PC Magazine.
 Reardon, Marguerite (16 June 2009). "AT&T and Verizon deny price-fixing accusations". CNET News. Retrieved 29 March 2012.
 The death of SMS has been greatly exaggerated. Phonearena.com. Retrieved on 2015-06-08.
 "Don't Use SMS for Confidential Communication". Gartner Group. 26 November 2002. Retrieved 29 March 2012.
 "Sonja satte sms-verdensrekord | TV 2 Nyhetene". Tv2nyhetene.no. 14 November 2009. Retrieved 29 March 2012.
 "Fastest fingers top text record". BBC News. 22 March 2005. Retrieved 27 March 2010.
 "Fastest Text Messager". The book of alternative records. Retrieved 2012-04-05.
 "World's fastest texter in Dunedin". Tvnz.co.nz. TECHNOLOGY News. 17 November 2007. Retrieved 2012-04-05.
 "Most Text Messages Sent or Received in a Single Month", The Universal Records Database, 14 September 2010. Retrieved 15 November 2010.
 Sang-hun, Choe (27 January 2010). "Rule of Thumbs: Koreans Reign in Texting World". New York Times. Seoul. Retrieved 10 February 2010.
 "World Record Texting Speed App – iTextFast". PR Mac. United States. 6 April 2011. Retrieved 6 April 2011.
 "A race to the wire as old hand at Morse code beats txt msgrs". timesonline.co.uk. London: The Times Online. 16 April 2005.
 eeggs.com (21 November 2001). "Nokia Mobile Phones Easter Eggs". Eeggs.com. Retrieved 29 March 2012.
 Nokia app lets you key SMSes in Morse Code, 1 June 2005, Boing Boing.
 "Back to the Future – Morse Code and Cellular Phones". oreillynet.com. O'Reilly Network. 28 June 2005. Archived from the original on 2005-07-03.
 Nokia files patent for Morse Code-generating cellphone, 12 March 2005, Engadget.
 George, Justin (September 11, 2008) "Bucs fans can tattle via text". tampabay.com.
 "Schooling fans on good behavior". sportsbusinessdaily.com (21 November 2011).
External links
	Look up text messaging in Wiktionary, the free dictionary.
	Wikimedia Commons has media related to Short message service.
"SMS, the strange duckling of GSM" (PDF). Archived from the original (PDF) on 2007-09-25. (101 KB)
The London Text and MSN Dictionary- A text and mobile phone dictionary written by west London teenagers
"Text messages helped Kenyans with HIV". CBC News. 9 November 2010. Archived from the original on 2010-11-15. Retrieved 2010-11-09.


[show] v t e
Mobile phones
[show] v t e
Telecommunications
Categories: Online chatText messagingComputer-related introductions in 19852000s fads and trends
Navigation menu
Not logged inTalkContributionsCreate accountLog inArticleTalkReadEditView historySearch

Search Wikipedia
Main page
Contents
Featured content
Current events
Random article
Donate to Wikipedia
Wikipedia store
Interaction
Help
About Wikipedia
Community portal
Recent changes
Contact page
Tools
What links here
Related changes
Upload file
Special pages
Permanent link
Page information
Wikidata item
Cite this page
Print/export
Create a book
Download as PDF
Printable version

Languages
Bahasa Indonesia
Српски / srpski
Edit links
This page was last edited on 11 May 2018, at 13:55.
Text is available under the Creative Commons Attribution-ShareAlike License; additional terms may apply. By using this site, you agree to the Terms of Use and Privacy Policy. Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a non-profit organization.
Privacy policyAbout WikipediaDisclaimersContact WikipediaDevelopersCookie statementMobile viewWikimedia Foundation Powered by MediaWiki


String (computer science)
From Wikipedia, the free encyclopedia
  (Redirected from Text string)
This article is about the data type. For other uses, see String (disambiguation).

This article needs additional citations for verification. Please help improve this article by adding citations to reliable sources. Unsourced material may be challenged and removed. (March 2015) (Learn how and when to remove this template message)

Strings are applied e.g. in Bioinformatics to describe DNA strands composed of nitrogenous bases.
In computer programming, a string is traditionally a sequence of characters, either as a literal constant or as some kind of variable. The latter may allow its elements to be mutated and the length changed, or it may be fixed (after creation). A string is generally understood as a data type and is often implemented as an array data structure of bytes (or words) that stores a sequence of elements, typically characters, using some character encoding. A string may also denote more general arrays or other sequence (or list) data types and structures.

Depending on programming language and precise data type used, a variable declared to be a string may either cause storage in memory to be statically allocated for a predetermined maximum length or employ dynamic allocation to allow it to hold a variable number of elements.

When a string appears literally in source code, it is known as a string literal or an anonymous string.[1]

In formal languages, which are used in mathematical logic and theoretical computer science, a string is a finite sequence of symbols that are chosen from a set called an alphabet.

Contents 
1	Formal theory
1.1	Concatenation and substrings
1.2	Prefixes and suffixes
1.3	Rotations
1.4	Reversal
1.5	Lexicographical ordering
1.6	String operations
1.7	Topology
2	String datatypes
2.1	String length
2.2	Character encoding
2.3	Implementations
2.4	Representations
2.4.1	Null-terminated
2.4.2	Byte- and bit-terminated
2.4.3	Length-prefixed
2.4.4	Strings as records
2.4.5	Other representations
2.5	Security concerns
3	Literal strings
4	Non-text strings
5	String processing algorithms
6	Character string-oriented languages and utilities
7	Character string functions
8	String buffers
8.1	In Java
8.1.1	Theory
8.1.2	Implications
8.2	In .NET
8.3	In other languages
8.4	String instructions
9	See also
10	References
Formal theory
See also: Tuple
Let Σ be a non-empty finite set of symbols (alternatively called characters), called the alphabet. No assumption is made about the nature of the symbols. A string (or word) over Σ is any finite sequence of symbols from Σ.[2] For example, if Σ = {0, 1}, then 01011 is a string over Σ.

The length of a string s is the number of symbols in s (the length of the sequence) and can be any non-negative integer; it is often denoted as |s|. The empty string is the unique string over Σ of length 0, and is denoted ε or λ.[2][3]

The set of all strings over Σ of length n is denoted Σn. For example, if Σ = {0, 1}, then Σ2 = {00, 01, 10, 11}. Note that Σ0 = {ε} for any alphabet Σ.

The set of all strings over Σ of any length is the Kleene closure of Σ and is denoted Σ*. In terms of Σn,

{\displaystyle \Sigma ^{*}=\bigcup _{n\in \mathbb {N} \cup \{0\}}\Sigma ^{n}} \Sigma^{*} = \bigcup_{n \in \mathbb{N} \cup \{0\}} \Sigma^{n}
For example, if Σ = {0, 1}, then Σ* = {ε, 0, 1, 00, 01, 10, 11, 000, 001, 010, 011, ...}. Although the set Σ* itself is countably infinite, each element of Σ* is a string of finite length.

A set of strings over Σ (i.e. any subset of Σ*) is called a formal language over Σ. For example, if Σ = {0, 1}, the set of strings with an even number of zeros, {ε, 1, 00, 11, 001, 010, 100, 111, 0000, 0011, 0101, 0110, 1001, 1010, 1100, 1111, ...}, is a formal language over Σ.

Concatenation and substrings
Concatenation is an important binary operation on Σ*. For any two strings s and t in Σ*, their concatenation is defined as the sequence of symbols in s followed by the sequence of characters in t, and is denoted st. For example, if Σ = {a, b, ..., z}, s = bear, and t = hug, then st = bearhug and ts = hugbear.

String concatenation is an associative, but non-commutative operation. The empty string ε serves as the identity element; for any string s, εs = sε = s. Therefore, the set Σ* and the concatenation operation form a monoid, the free monoid generated by Σ. In addition, the length function defines a monoid homomorphism from Σ* to the non-negative integers (that is, a function {\displaystyle L:\Sigma ^{*}\mapsto \mathbb {N} \cup \{0\}} L: \Sigma^{*} \mapsto \mathbb{N} \cup \{0\}, such that {\displaystyle L(st)=L(s)+L(t)\quad \forall s,t\in \Sigma ^{*}} L(st)=L(s)+L(t)\quad \forall s,t\in\Sigma^*).

A string s is said to be a substring or factor of t if there exist (possibly empty) strings u and v such that t = usv. The relation "is a substring of" defines a partial order on Σ*, the least element of which is the empty string.

Prefixes and suffixes
A string s is said to be a prefix of t if there exists a string u such that t = su. If u is nonempty, s is said to be a proper prefix of t. Symmetrically, a string s is said to be a suffix of t if there exists a string u such that t = us. If u is nonempty, s is said to be a proper suffix of t. Suffixes and prefixes are substrings of t. Both the relations "is a prefix of" and "is a suffix of" are prefix orders.

Rotations
A string s = uv is said to be a rotation of t if t = vu. For example, if Σ = {0, 1} the string 0011001 is a rotation of 0100110, where u = 00110 and v = 01.

Reversal
The reverse of a string is a string with the same symbols but in reverse order. For example, if s = abc (where a, b, and c are symbols of the alphabet), then the reverse of s is cba. A string that is the reverse of itself (e.g., s = madam) is called a palindrome, which also includes the empty string and all strings of length 1.

Lexicographical ordering
It is often useful to define an ordering on a set of strings. If the alphabet Σ has a total order (cf. alphabetical order) one can define a total order on Σ* called lexicographical order. For example, if Σ = {0, 1} and 0 < 1, then the lexicographical order on Σ* includes the relationships ε < 0 < 00 < 000 < ... < 0001 < 001 < 01 < 010 < 011 < 0110 < 01111 < 1 < 10 < 100 < 101 < 111 < 1111 < 11111 ... The lexicographical order is total if the alphabetical order is, but isn't well-founded for any nontrivial alphabet, even if the alphabetical order is.

See Shortlex for an alternative string ordering that preserves well-foundedness.

String operations
A number of additional operations on strings commonly occur in the formal theory. These are given in the article on string operations.

Topology

(Hyper)cube of binary strings of length 3
Strings admit the following interpretation as nodes on a graph:

Fixed-length strings can be viewed as nodes on a hypercube
Variable-length strings (of finite length) can be viewed as nodes on the k-ary tree, where k is the number of symbols in Σ
Infinite strings (otherwise not considered here) can be viewed as infinite paths on the k-ary tree.
The natural topology on the set of fixed-length strings or variable-length strings is the discrete topology, but the natural topology on the set of infinite strings is the limit topology, viewing the set of infinite strings as the inverse limit of the sets of finite strings. This is the construction used for the p-adic numbers and some constructions of the Cantor set, and yields the same topology.

Isomorphisms between string representations of topologies can be found by normalizing according to the lexicographically minimal string rotation.

String datatypes
See also: Comparison of programming languages (string functions)
A string datatype is a datatype modeled on the idea of a formal string. Strings are such an important and useful datatype that they are implemented in nearly every programming language. In some languages they are available as primitive types and in others as composite types. The syntax of most high-level programming languages allows for a string, usually quoted in some way, to represent an instance of a string datatype; such a meta-string is called a literal or string literal.

String length
Although formal strings can have an arbitrary but finite length, the length of strings in real languages is often constrained to an artificial maximum. In general, there are two types of string datatypes: fixed-length strings, which have a fixed maximum length to be determined at compile time and which use the same amount of memory whether this maximum is needed or not, and variable-length strings, whose length is not arbitrarily fixed and which can use varying amounts of memory depending on the actual requirements at run time. Most strings in modern programming languages are variable-length strings. Of course, even variable-length strings are limited in length – by the number of bits available to a pointer, and by the size of available computer memory. The string length can be stored as a separate integer (which may put an artificial limit on the length) or implicitly through a termination character, usually a character value with all bits zero such as in C programming language. See also "Null-terminated" below.

Character encoding
String datatypes have historically allocated one byte per character, and, although the exact character set varied by region, character encodings were similar enough that programmers could often get away with ignoring this, since characters a program treated specially (such as period and space and comma) were in the same place in all the encodings a program would encounter. These character sets were typically based on ASCII or EBCDIC. If text in one encoding was displayed on a system using a different encoding, text was often mangled, though often somewhat readable and some computer users learned to read the mangled text.

Logographic languages such as Chinese, Japanese, and Korean (known collectively as CJK) need far more than 256 characters (the limit of a one 8-bit byte per-character encoding) for reasonable representation. The normal solutions involved keeping single-byte representations for ASCII and using two-byte representations for CJK ideographs. Use of these with existing code led to problems with matching and cutting of strings, the severity of which depended on how the character encoding was designed. Some encodings such as the EUC family guarantee that a byte value in the ASCII range will represent only that ASCII character, making the encoding safe for systems that use those characters as field separators. Other encodings such as ISO-2022 and Shift-JIS do not make such guarantees, making matching on byte codes unsafe. These encodings also were not "self-synchronizing", so that locating character boundaries required backing up to the start of a string, and pasting two strings together could result in corruption of the second string.

Unicode has simplified the picture somewhat. Most programming languages now have a datatype for Unicode strings. Unicode's preferred byte stream format UTF-8 is designed not to have the problems described above for older multibyte encodings. UTF-8, UTF-16 and UTF-32 require the programmer to know that the fixed-size code units are different than the "characters", the main difficulty currently is incorrectly designed APIs that attempt to hide this difference (UTF-32 does make code points fixed-sized, but these are not "characters" due to composing codes).

Implementations
Some languages like C++ implement strings as templates that can be used with any datatype, but this is the exception, not the rule.

Some languages, such as C++ and Ruby, normally allow the contents of a string to be changed after it has been created; these are termed mutable strings. In other languages, such as Java and Python, the value is fixed and a new string must be created if any alteration is to be made; these are termed immutable strings.

Strings are typically implemented as arrays of bytes, characters, or code units, in order to allow fast access to individual units or substrings—including characters when they have a fixed length. A few languages such as Haskell implement them as linked lists instead.

Some languages, such as Prolog and Erlang, avoid implementing a dedicated string datatype at all, instead adopting the convention of representing strings as lists of character codes.

Representations
Representations of strings depend heavily on the choice of character repertoire and the method of character encoding. Older string implementations were designed to work with repertoire and encoding defined by ASCII, or more recent extensions like the ISO 8859 series. Modern implementations often use the extensive repertoire defined by Unicode along with a variety of complex encodings such as UTF-8 and UTF-16.

The term byte string usually indicates a general-purpose string of bytes, rather than strings of only (readable) characters, strings of bits, or such. Byte strings often imply that bytes can take any value and any data can be stored as-is, meaning that there should be no value interpreted as a termination value.

Most string implementations are very similar to variable-length arrays with the entries storing the character codes of corresponding characters. The principal difference is that, with certain encodings, a single logical character may take up more than one entry in the array. This happens for example with UTF-8, where single codes (UCS code points) can take anywhere from one to four bytes, and single characters can take an arbitrary number of codes. In these cases, the logical length of the string (number of characters) differs from the physical length of the array (number of bytes in use). UTF-32 avoids the first part of the problem.

Null-terminated
Main article: Null-terminated string
The length of a string can be stored implicitly by using a special terminating character; often this is the null character (NUL), which has all bits zero, a convention used and perpetuated by the popular C programming language.[4] Hence, this representation is commonly referred to as a C string. This representation of an n-character string takes n + 1 space (1 for the terminator), and is thus an implicit data structure.

In terminated strings, the terminating code is not an allowable character in any string. Strings with length field do not have this limitation and can also store arbitrary binary data.

An example of a null-terminated string stored in a 10-byte buffer, along with its ASCII (or more modern UTF-8) representation as 8-bit hexadecimal numbers is:

F	R	A	N	K	NUL	k	e	f	w
4616	5216	4116	4E16	4B16	0016	6B16	6516	6616	7716
The length of the string in the above example, "FRANK", is 5 characters, but it occupies 6 bytes. Characters after the terminator do not form part of the representation; they may be either part of other data or just garbage. (Strings of this form are sometimes called ASCIZ strings, after the original assembly language directive used to declare them.)

Byte- and bit-terminated
Using a special byte other than null for terminating strings has historically appeared in both hardware and software, though sometimes with a value that was also a printing character. $ was used by many assembler systems, : used by CDC systems (this character had a value of zero), and the ZX80 used "[5] since this was the string delimiter in its BASIC language.

Somewhat similar, "data processing" machines like the IBM 1401 used a special word mark bit to delimit strings at the left, where the operation would start at the right. This bit had to be clear in all other parts of the string. This meant that, while the IBM 1401 had a seven-bit word, almost no-one ever thought to use this as a feature, and override the assignment of the seventh bit to (for example) handle ASCII codes.

Early microcomputer software relied upon the fact that ASCII codes do not use the high-order bit, and set it to indicate the end of a string. It must be reset to 0 prior to output.[6]

Length-prefixed
The length of a string can also be stored explicitly, for example by prefixing the string with the length as a byte value; a convention used in many Pascal dialects, as a consequence, some people call such a string a Pascal string or P-string. Storing the string length as byte limits the maximum string length to 255. To avoid such limitations, improved implementations of P-strings use 16-, 32-, or 64-bit words to store the string length. When the length field covers the address space, strings are limited only by the available memory.

If the length is bounded, then it can be encoded in constant space, typically a machine word, thus leading to an implicit data structure, taking n + k space, where k is the number of characters in a word (8 for 8-bit ASCII on a 64-bit machine, 1 for 32-bit UTF-32/UCS-4 on a 32-bit machine, etc.). If the length is not bounded, encoding a length n takes log(n) space (see fixed-length code), so length-prefixed strings are a succinct data structure, encoding a string of length n in log(n) + n space.

In the latter case, the length-prefix field itself doesn't have fixed length, therefore the actual string data needs to be moved when the string grows such that the length field needs to be increased.

Here is a Pascal string stored in a 10-byte buffer, along with its ASCII / UTF-8 representation:

length	F	R	A	N	K	k	e	f	w
0516	4616	5216	4116	4E16	4B16	6B16	6516	6616	7716
Strings as records
Many languages, including object-oriented ones, implement strings as records with an internal structure like:

class string {
  size_t length;
  char *text;
};
However, since the implementation is usually hidden, the string must be accessed and modified through member functions. text is a pointer to a dynamically allocated memory area, which might be expanded as needed. See also string (C++).

Other representations
Both character termination and length codes limit strings: For example, C character arrays that contain null (NUL) characters cannot be handled directly by C string library functions: Strings using a length code are limited to the maximum value of the length code.

Both of these limitations can be overcome by clever programming.

It is possible to create data structures and functions that manipulate them that do not have the problems associated with character termination and can in principle overcome length code bounds. It is also possible to optimize the string represented using techniques from run length encoding (replacing repeated characters by the character value and a length) and Hamming encoding[clarification needed].

While these representations are common, others are possible. Using ropes makes certain string operations, such as insertions, deletions, and concatenations more efficient.

The core data structure in a text editor is the one that manages the string (sequence of characters) that represents the current state of the file being edited. While that state could be stored in a single long consecutive array of characters, a typical text editor instead uses an alternative representation as its sequence data structure—a gap buffer, a linked list of lines, a piece table, or a rope—which makes certain string operations, such as insertions, deletions, and undoing previous edits, more efficient.[7]

Security concerns
The differing memory layout and storage requirements of strings can affect the security of the program accessing the string data. String representations requiring a terminating character are commonly susceptible to buffer overflow problems if the terminating character is not present, caused by a coding error or an attacker deliberately altering the data. String representations adopting a separate length field are also susceptible if the length can be manipulated. In such cases, program code accessing the string data requires bounds checking to ensure that it does not inadvertently access or change data outside of the string memory limits.

String data is frequently obtained from user-input to a program. As such, it is the responsibility of the program to validate the string to ensure that it represents the expected format. Performing limited or no validation of user-input can cause a program to be vulnerable to code injection attacks.

Literal strings
See also: String literal
Sometimes, strings need to be embedded inside a text file that is both human-readable and intended for consumption by a machine. This is needed in, for example, source code of programming languages, or in configuration files. In this case, the NUL character doesn't work well as a terminator since it is normally invisible (non-printable) and is difficult to input via a keyboard. Storing the string length would also be inconvenient as manual computation and tracking of the length is tedious and error-prone.

Two common representations are:

Surrounded by quotation marks (ASCII 0x22 double quote or ASCII 0x27 single quote), used by most programming languages. To be able to include special characters such as the quotation mark itself, newline characters, or non-printable characters, escape sequences are often available, usually prefixed with the backslash character (ASCII 0x5C).
Terminated by a newline sequence, for example in Windows INI files.
Non-text strings
While character strings are very common uses of strings, a string in computer science may refer generically to any sequence of homogeneously typed data. A bit string or byte string, for example, may be used to represent non-textual binary data retrieved from a communications medium. This data may or may not be represented by a string-specific datatype, depending on the needs of the application, the desire of the programmer, and the capabilities of the programming language being used. If the programming language's string implementation is not 8-bit clean, data corruption may ensue.

C programmers draw a sharp distinction between a "string", aka a "string of characters", which by definition is always null terminated, vs. a "byte string" or "pseudo string" which may be stored in the same array but is often not null terminated. Using C string handling functions on such a "byte string" often seems to work, but later leads to security problems.[8][9][10]

String processing algorithms
There are many algorithms for processing strings, each with various trade-offs. Some categories of algorithms include:

String searching algorithms for finding a given substring or pattern
String manipulation algorithms
Sorting algorithms
Regular expression algorithms
Parsing a string
Sequence mining
Advanced string algorithms often employ complex mechanisms and data structures, among them suffix trees and finite state machines.

The name stringology was coined in 1984 by computer scientist Zvi Galil for the issue of algorithms and data structures used for string processing.[11]

Character string-oriented languages and utilities
Character strings are such a useful datatype that several languages have been designed in order to make string processing applications easy to write. Examples include the following languages:

awk
Icon
MUMPS
Perl
Rexx
Ruby
sed
SNOBOL
Tcl
TTM
Many Unix utilities perform simple string manipulations and can be used to easily program some powerful string processing algorithms. Files and finite streams may be viewed as strings.

Some APIs like Multimedia Control Interface, embedded SQL or printf use strings to hold commands that will be interpreted.

Recent scripting programming languages, including Perl, Python, Ruby, and Tcl employ regular expressions to facilitate text operations. Perl is particularly noted for its regular expression use,[12] and many other languages and applications implement Perl compatible regular expressions.

Some languages such as Perl and Ruby support string interpolation, which permits arbitrary expressions to be evaluated and included in string literals.

Character string functions
See also: Comparison of programming languages (string functions)
String functions are used to manipulate a string or change or edit the contents of a string. They also are used to query information about a string. They are usually used within the context of a computer programming language.

The most basic example of a string function is the string length function – the function that returns the length of a string (not counting any terminator characters or any of the string's internal structural information) and does not modify the string. This function is often named length or len. For example, length("hello world") would return 11.

String buffers
In some programming languages, a string buffer is an alternative to a string. It has the ability to be altered through adding or appending, whereas a String is normally fixed or immutable.

In Java
Theory
Java's standard way to handle text is to use its String class. Any given String in Java is an immutable object, which means its state cannot be changed. A String has an array of characters. Whenever a String must be manipulated, any changes require the creation of a new String (which, in turn, involves the creation of a new array of characters, and copying of the original array). This happens even if the original String's value or intermediate Strings used for the manipulation are not kept.

Java provides two alternate classes for string manipulation, called StringBuffer and StringBuilder. Both of these, like String, each has an array to hold characters. They, however, are mutable (its state can be altered). Their array of characters is not necessarily completely filled (as opposed to a String, whose array is always the exact required length for its contents). Thus, a StringBuffer or StringBuilder has the capability to add, remove, or change its state without creating a new object (and without the creation of a new array, and array copying). The exception to this is when its array is no longer of suitable length to hold its content (a case which rarely happens because of the default Dynamic memory allocation provided by the JVM). In this case, it is required to create a new array, and copy the contents.

For these reasons, Java would handle an expression like

String newString = aString + anInt + aChar + aDouble;
like this:

String newString = (new StringBuilder(aString)).append(anInt).append(aChar).append(aDouble).toString();
Implications
Generally, a StringBuffer is more efficient than a String in string handling. However, this is not necessarily the case, since a StringBuffer will be required to recreate its character array when it runs out of space. Theoretically, this is possible to happen the same number of times as a new String would be required, although this is unlikely (and the programmer can provide length hints to prevent this). Either way, the effect is not noticeable in modern desktop computers.

As well, the shortcomings of arrays are inherent in a StringBuffer. In order to insert or remove characters at arbitrary positions, whole sections of arrays must be moved.

The method by which a StringBuffer is attractive in an environment with low processing power takes this ability by using too much memory, which is likely also at a premium in this environment. This point, however, is trivial, considering the space required for creating many instances of Strings in order to process them. As well, the StringBuffer can be optimized to "waste" as little memory as possible.

The StringBuilder class, introduced in J2SE 5.0, differs from StringBuffer in that it is unsynchronized. When only a single thread at a time will access the object, using a StringBuilder processes more efficiently than using a StringBuffer.

StringBuffer and StringBuilder are included in the java.lang package.

In .NET
Microsoft's .NET Framework has a StringBuilder class in its Base Class Library.

In other languages
In C++ and Ruby, the standard string class is already mutable, with the ability to change the contents and append strings, etc., so a separate mutable string class is unnecessary.
In Objective-C (Cocoa/OpenStep frameworks), the NSMutableString class is the mutable version of the NSString class.
String instructions
Some microprocessor's instruction set architectures contain direct support for string operations, such as block copy (e.g. In intel x86m REPNZ MOVSB).[13]

See also
Formal language — a (possibly infinite) set of strings in theoretical computer science
Connection string — passed to a driver to initiate a connection e.g. to a database
Rope — a data structure for efficiently manipulating long strings
Bitstring — a string of binary digits
Binary-safe — a property of string manipulating functions treating their input as raw data stream
Improper input validation — a type of software security vulnerability particularly relevant for user-given strings
Incompressible string — a string that cannot be compressed by any algorithm
Empty string — its properties and representation in programming languages
String metric — notions of similarity between strings
string (C++) — overview of C++ string handling
string.h — overview of C string handling
Analysis of algorithms — determining time and storage needed by a particular (e.g. string manipulation) algorithm
Comparison of programming languages (string functions)
References
 "Introduction To Java - MFC 158 G". Archived from the original on 2016-03-03. String literals (or constants) are called ‘anonymous strings’
 Barbara H. Partee; Alice ter Meulen; Robert E. Wall (1990). Mathematical Methods in Linguistics. Kluwer.
 John E. Hopcroft, Jeffrey D. Ullman (1979). Introduction to Automata Theory, Languages, and Computation. Addison-Wesley. ISBN 0-201-02988-X. Here: sect.1.1, p.1
 Bryant, Randal E.; David, O'Hallaron (2003), Computer Systems: A Programmer's Perspective (2003 ed.), Upper Saddle River, NJ: Pearson Education, p. 40, ISBN 0-13-034074-X, archived from the original on 2007-08-06
 Wearmouth, Geoff. "An Assembly Listing of the ROM of the Sinclair ZX80". Archived from the original on August 15, 2015.
 Allison, Dennis. "Design Notes for Tiny BASIC". Archived from the original on 2017-04-10.
 Charles Crowley. "Data Structures for Text Sequences" Archived 2016-03-04 at the Wayback Machine.. Section "Introduction" Archived 2016-04-04 at the Wayback Machine..
 "strlcpy and strlcat - consistent, safe, string copy and concatenation." Archived 2016-03-13 at the Wayback Machine.
 "A rant about strcpy, strncpy and strlcpy." Archived 2016-02-29 at the Wayback Machine.
 Keith Thompson. "No, strncpy() is not a "safer" strcpy()". 2012.
 "The Prague Stringology Club". stringology.org. Archived from the original on 1 June 2015. Retrieved 23 May 2015.
 "Essential Perl". Archived from the original on 2012-04-21. Perl's most famous strength is in string manipulation with regular expressions.
 "x86 string instructions". Archived from the original on 2015-03-27.
[show] v t e
Strings
[show] v t e
Data types
[show] v t e
Automata theory: formal languages and formal grammars
Categories: Character encodingData typesFormal languagesCombinatorics on wordsPrimitive typesSyntactic entitiesString (computer science)Algorithms on strings
Navigation menu
Not logged inTalkContributionsCreate accountLog inArticleTalkReadEditView historySearch

Search Wikipedia
Main page
Contents
Featured content
Current events
Random article
Donate to Wikipedia
Wikipedia store
Interaction
Help
About Wikipedia
Community portal
Recent changes
Contact page
Tools
What links here
Related changes
Upload file
Special pages
Permanent link
Page information
Wikidata item
Cite this page
Print/export
Create a book
Download as PDF
Printable version

Languages
Deutsch
Español
Français
한국어
हिन्दी
Italiano
Русский
Tagalog
中文
30 more
Edit links
This page was last edited on 9 April 2018, at 05:53.
Text is available under the Creative Commons Attribution-ShareAlike License; additional terms may apply. By using this site, you agree to the Terms of Use and Privacy Policy. Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a non-profit organization.
Privacy policyAbout WikipediaDisclaimersContact WikipediaDevelopersCookie statementMobile viewWikimedia Foundation Powered by MediaWiki


Text file
From Wikipedia, the free encyclopedia

This article needs additional citations for verification. Please help improve this article by adding citations to reliable sources. Unsourced material may be challenged and removed. (December 2015) (Learn how and when to remove this template message)
Text file
Text-txt.svg
Filename extension	.txt
Internet media type	text/plain
Type code	TEXT
Uniform Type Identifier (UTI)	public.plain-text
UTI conformation	public.text
Type of format	Document file format, Generic container format
A text file (sometimes spelled "textfile"; an old alternative name is "flatfile") is a kind of computer file that is structured as a sequence of lines of electronic text. A text file exists stored as data within a computer file system. The end of a text file is often denoted by placing one or more special characters, known as an end-of-file marker, after the last line in a text file. Such markers were required under the CP/M and MS-DOS operating systems. On modern operating systems such as Windows and Unix-like systems, text files do not contain any special EOF character.

"Text file" refers to a type of container, while plain text refers to a type of content. Text files can contain plain text, but they are not limited to such.

At a generic level of description, there are two kinds of computer files: text files and binary files.[1]

Contents 
1	Data storage
2	Encoding
3	Formats
3.1	Windows text files
3.2	Unix text files
3.3	Apple Macintosh text files
4	Rendering
5	See also
6	Notes and references
7	External links
Data storage

A stylized iconic depiction of a CSV-formatted text file.
Because of their simplicity, text files are commonly used for storage of information. They avoid some of the problems encountered with other file formats, such as endianness, padding bytes, or differences in the number of bytes in a machine word. Further, when data corruption occurs in a text file, it is often easier to recover and continue processing the remaining contents. A disadvantage of text files is that they usually have a low entropy, meaning that the information occupies more storage than is strictly necessary.

A simple text file may need no additional metadata (other than knowledge of its character set) to assist the reader in interpretation. A text file may contain no data at all, which is a case of zero byte file.

Encoding
The ASCII character set is the most common compatible subset of character sets for English-language text files, and is generally assumed to be the default file format in many situations. It covers American English, but for the British Pound sign, the Euro sign, or characters used outside English, a richer character set must be used. In many systems, this is chosen based on the default locale setting on the computer it is read on. Prior to UTF-8, this was traditionally single-byte encodings (such as ISO-8859-1 through ISO-8859-16) for European languages and wide character encodings for Asian languages.

Because many encodings have only a limited repertoire of characters, they are often only usable to represent text in a limited subset of human languages. Unicode is an attempt to create a common standard for representing all known languages, and most known character sets are subsets of the very large Unicode character set. Although there are multiple character encodings available for Unicode, the most common is UTF-8, which has the advantage of being backwards-compatible with ASCII; that is, every ASCII text file is also a UTF-8 text file with identical meaning. UTF-8 also has the advantage that it is easily auto-detectable. Thus, a common operating mode of UTF-8 capable software, when opening files of unknown encoding, is to try UTF-8 first and fall back to a locale dependent legacy encoding when it definitely isn't UTF-8.

Formats
On most operating systems the name text file refers to file format that allows only plain text content with very little formatting (e.g., no bold or italic types). Such files can be viewed and edited on text terminals or in simple text editors. Text files usually have the MIME type "text/plain", usually with additional information indicating an encoding.

Windows text files
MS-DOS and Windows use a common text file format, with each line of text separated by a two-character combination: carriage return (CR) and line feed (LF). It is common for the last line of text not to be terminated with a CR-LF marker, and many text editors (including Notepad) do not automatically insert one on the last line.

On Microsoft Windows operating systems, a file is regarded as a text file if the suffix of the name of the file (the "filename extension") is "txt". However, many other suffixes are used for text files with specific purposes. For example, source code for computer programs is usually kept in text files that have file name suffixes indicating the programming language in which the source is written.

Most Windows text files use "ANSI", "OEM", "Unicode" or "UTF-8" encoding. What Windows terminology calls "ANSI encodings" are usually single-byte ISO/IEC 8859 encodings (i.e. ANSI in the Microsoft Notepad menus is really "System Code Page", non-Unicode, legacy encoding), except for in locales such as Chinese, Japanese and Korean that require double-byte character sets. ANSI encodings were traditionally used as default system locales within Windows, before the transition to Unicode. By contrast, OEM encodings, also known as DOS code pages, were defined by IBM for use in the original IBM PC text mode display system. They typically include graphical and line-drawing characters common in DOS applications. "Unicode"-encoded Windows text files contain text in UTF-16 Unicode Transformation Format. Such files normally begin with Byte Order Mark (BOM), which communicates the endianness of the file content. Although UTF-8 does not suffer from endianness problems, many Windows programs (i.e. Notepad) prepend the contents of UTF-8-encoded files with BOM,[2] to differentiate UTF-8 encoding from other 8-bit encodings.[3]

Unix text files
On Unix-like operating systems text files format is precisely described: POSIX defines a text file as a file that contains characters organized into zero or more lines,[4] where lines are sequences of zero or more non-newline characters plus a terminating newline character,[5] normally LF.

Additionally, POSIX defines a printable file as a text file whose characters are printable or space or backspace according to regional rules. This excludes most control characters, which are not printable.[6]

Apple Macintosh text files
Prior to the advent of Mac OS X (now called macOS), the classic Mac OS system regarded the content of a file (the data fork) to be a text file when its resource fork indicated that the type of the file was "TEXT".[7] Lines of Macintosh text files are terminated with CR characters.[8]

Being certified Unix, macOS uses POSIX format for text files.[8] Uniform Type Identifier (UTI) used for text files in macOS is "public.plain-text"; additional, more specific UTIs are: "public.utf8-plain-text" for utf-8-encoded text, "public.utf16-external-plain-text" and "public.utf16-plain-text" for utf-16-encoded text and "com.apple.traditional-mac-plain-text" for classic Mac OS text files.[7]

Rendering
When opened by a text editor, human-readable content is presented to the user. This often consists of the file's plain text visible to the user. Depending on the application, control codes may be rendered either as literal instructions acted upon by the editor, or as visible escape characters that can be edited as plain text. Though there may be plain text in a text file, control characters within the file (especially the end-of-file character) can render the plain text unseen by a particular method.

See also
ASCII
EBCDIC
Filename extension
List of file formats
Newline
Text editor
Unicode
Notes and references
 Lewis, John (2006). Computer Science Illuminated. Jones and Bartlett. ISBN 0-7637-4149-3.
 "Using Byte Order Marks". Internationalization for Windows Applications. Microsoft. Retrieved 2015-12-15.
 Freytag, Asmus (2015-12-18). "FAQ – UTF-8, UTF-16, UTF-32 & BOM". The Unicode Consortium. Retrieved 2016-05-30. Yes, UTF-8 can contain a BOM. However, it makes no difference as to the endianness of the byte stream. UTF-8 always has the same byte order. An initial BOM is only used as a signature — an indication that an otherwise unmarked text file is in UTF-8. Note that some recipients of UTF-8 encoded data do not expect a BOM. Where UTF-8 is used transparently in 8-bit environments, the use of a BOM will interfere with any protocol or file format that expects specific ASCII characters at the beginning, such as the use of "#!" of at the beginning of Unix shell scripts.
 "3.397 Text File". IEEE Std 1003.1, 2013 Edition. IEEE Computer Society. Retrieved 2015-12-15.
 "3.206 Line". IEEE Std 1003.1, 2013 Edition. IEEE Computer Society. Retrieved 2015-12-15.
 "3.284 Printable File". IEEE Std 1003.1, 2013 Edition. IEEE Computer Society. Retrieved 2015-12-15.
 "System-Declared Uniform Type Identifiers". Guides and Sample Code. Apple Inc. 2009-11-17. Retrieved 2016-09-12.
 "Designing Scripts for Cross-Platform Deployment". Mac Developer Library. Apple Inc. 2014-03-10. Retrieved 2016-09-12.
External links
C2: the Power of Plain Text
[hide] v t e
Computer files
Types	
Binary file / Text file File format List of file formats File signatures Magic number Metafile Sidecar file Sparse file Swap file System file Temporary file Zero-byte file
Properties	
Filename 8.3 filename Long filename Filename mangling Filename extension List of filename extensions File attribute Extended file attributes File size Hidden file / Hidden directory
Organisation	
Directory/Folder NTFS junction point Temporary folder Directory structure File sequence File system Filesystem Hierarchy Standard Path
Operations	
Open Close Read Write
Linking	
Alias File descriptor Hard link Shadow Shortcut Symbolic link
Management	
File comparison File compression File manager Comparison of file managers File system permissions File transfer File sharing File verification
Categories: Text file formatsComputer data
Navigation menu
Not logged inTalkContributionsCreate accountLog inArticleTalkReadEditView historySearch

Search Wikipedia
Main page
Contents
Featured content
Current events
Random article
Donate to Wikipedia
Wikipedia store
Interaction
Help
About Wikipedia
Community portal
Recent changes
Contact page
Tools
What links here
Related changes
Upload file
Special pages
Permanent link
Page information
Wikidata item
Cite this page
Print/export
Create a book
Download as PDF
Printable version
In other projects
Wikimedia Commons

Languages
العربية
Deutsch
Español
Français
한국어
Bahasa Indonesia
Italiano
Русский
中文
23 more
Edit links
This page was last edited on 9 April 2018, at 20:57.
Text is available under the Creative Commons Attribution-ShareAlike License; additional terms may apply. By using this site, you agree to the Terms of Use and Privacy Policy. Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a non-profit organization.
Privacy policyAbout WikipediaDisclaimersContact WikipediaDevelopersCookie statementMobile viewWikimedia Foundation Powered by MediaWiki


Plain text
From Wikipedia, the free encyclopedia
For the cryptography meaning, see Plaintext. For other uses, see Text (disambiguation).

This article needs additional citations for verification. Please help improve this article by adding citations to reliable sources. Unsourced material may be challenged and removed. (August 2012) (Learn how and when to remove this template message)

Text file of The Human Side of Animals by Royal Dixon, displayed by the command cat in an xterm window
In computing, plain text is the data (e.g. file contents) that represent only characters of readable material but not its graphical representation nor other objects (images, etc.). It may also include a limited number of characters that control simple arrangement of text, such as line breaks or tabulation characters. Plain text is different from formatted text, where style information is included, and from "binary files" in which some portions must be interpreted as binary objects (encoded integers, real numbers, images, etc.).

The encoding has traditionally been either ASCII, sometimes EBCDIC. Unicode-based encodings such as UTF-8 and UTF-16 are gradually replacing the older ASCII derivatives limited to 7 or 8 bit codes.

Files that contain markup or other meta-data are generally considered plain-text, as long as the entirety remains in directly human-readable form (as in HTML, XML, and so on (as Coombs, Renear, and DeRose argue,[1] punctuation is itself markup). The use of plain text rather than bit-streams to express markup, enables files to survive much better "in the wild", in part by making them largely immune to computer architecture incompatibilities.

According to The Unicode Standard,

"Plain text is a pure sequence of character codes; plain Ue-encoded text is therefore a sequence of Unicode character codes."
styled text, also known as rich text, is any text representation containing plain text completed by information such as a language identifier, font size, color, hypertext links.[2]
For instance, rich text such as SGML, RTF, HTML, XML, wiki markup, and TeX rely on plain text.

According to The Unicode Standard, plain text has two main properties in regard to rich text:

"plain text is the underlying content stream to which formatting can be applied."
"Plain text is public, standardized, and universally readable.".[2]
Contents 
1	Plain text and rich text
2	Usage
3	Encoding
3.1	Character encodings
3.2	Control codes
4	See also
5	References
Plain text and rich text
Files that contain markup or other meta-data are generally considered plain-text, as long as the entirety remains in directly human-readable form (as in HTML, XML, and so on (as Coombs, Renear, and DeRose argue,[3] punctuation is itself markup). The use of plain text rather than bit-streams to express markup, enables files to survive much better "in the wild", in part by making them largely immune to computer architecture incompatibilities.

According to The Unicode Standard,

"Plain text is a pure sequence of character codes; plain Ue-encoded text is therefore a sequence of Unicode character codes."
styled text, also known as rich text, is any text representation containing plain text completed by information such as a language identifier, font size, color, hypertext links.[2]
For instance, rich text such as SGML, RTF, HTML, XML, wiki markup, and TeX rely on plain text.

According to The Unicode Standard, plain text has two main properties in regard to rich text:

"plain text is the underlying content stream to which formatting can be applied."
"Plain text is public, standardized, and universally readable.".[2]
Usage
The purpose of using plain text today is primarily independence from programs that require their very own special encoding or formatting or file format. Plain text files can be opened, read, and edited with countless text editors and utilities.

A command-line interface allows people to give commands in plain text and get a response, also in plain text.

Many other computer programs are also capable of processing or creating plain text, such as countless programs in DOS, Windows, classic Mac OS, and Unix and its kin; as well as web browsers (a few browsers such as Lynx and the Line Mode Browser produce only plain text for display) and other e-text readers.

Plain text files are almost universal in programming; a source code file containing instructions in a programming language is almost always a plain text file. Plain text is also commonly used for configuration files, which are read for saved settings at the startup of a program.

Plain text is used for much e-mail.

A comment, a ".txt" file, or a TXT Record generally contains only plain text (without formatting) intended for humans to read.

The best format for storing knowledge persistently is plain text, rather than some binary format.[4]

Encoding
Character encodings
Main article: Character encoding
Before the early 1960s, computers were mainly used for number-crunching rather than for text, and memory was extremely expensive. Computers often allocated only 6 bits for each character, permitting only 64 characters—assigning codes for A-Z, a-z, and 0-9 would leave only 2 codes: nowhere near enough. Most computers opted not to support lower-case letters. Thus, early text projects such as Roberto Busa's Index Thomisticus, the Brown Corpus, and others had to resort to conventions such as keying an asterisk preceding letters actually intended to be upper-case.

Fred Brooks of IBM argued strongly for going to 8-bit bytes, because someday people might want to process text; and won. Although IBM used EBCDIC, most text from then on came to be encoded in ASCII, using values from 0 to 31 for (non-printing) control characters, and values from 32 to 127 for graphic characters such as letters, digits, and punctuation. Most machines stored characters in 8 bits rather than 7, ignoring the remaining bit or using it as a checksum.

The near-ubiquity of ASCII was a great help, but failed to address international and linguistic concerns. The dollar-sign ("$") was not so useful in England, and the accented characters used in Spanish, French, German, and many other languages were entirely unavailable in ASCII (not to mention characters used in Greek, Russian, and most Eastern languages). Many individuals, companies, and countries defined extra characters as needed—often reassigning control characters, or using value in the range from 128 to 255. Using values above 128 conflicts with using the 8th bit as a checksum, but the checksum usage gradually died out.

These additional characters were encoded differently in different countries, making texts impossible to decode without figuring out the originator's rules. For instance, a browser might display ¬A rather than ` if it tried to interpret one character set as another. The International Organisation for Standardisation (ISO) eventually developed several code pages under ISO 8859, to accommodate various languages. The first of these (ISO 8859-1) is also known as"Latin-1", and covers the needs of most (not all) European languages that use Latin-based characters (there was not quite enough room to cover them all). ISO 2022 then provided conventions for"switching" between different character sets in mid-file. Many other organisations developed variations on these, and for many years Windows and Macintosh computers used incompatible variations.

The text-encoding situation became more and more complex, leading to efforts by ISO and by the Unicode Consortium to develop a single, unified character encoding that could cover all known (or at least all currently known) languages. After some conflict,[citation needed] these efforts were unified. Unicode currently allows for 1,114,112 code values, and assigns codes covering nearly all modern text writing systems, as well as many historical ones and for many non-linguistic characters such as printer's dingbats, mathematical symbols, etc.

Text is considered plain-text regardless of its encoding. To properly understand or process it the recipient must know (or be able to figure out) what encoding was used; however, they need not know anything about the computer architecture that was used, or about the binary structures defined by whatever program (if any) created the data.

Perhaps the most common way of explicitly stating the specific encoding of plain text is with a MIME type. For email and http, the default MIME type is "text/plain" -- plain text without markup. Another MIME type often used in both email and http is "text/html; charset=UTF-8" -- plain text represented using UTF-8 character encoding with HTML markup. Another common MIME type is "application/json" -- plain text represented using UTF-8 character encoding with JSON markup.

When a document is received without any explicit indication of the character encoding, some applications use charset detection to attempt to guess what encoding was used.

Control codes
Main article: C0 and C1 control codes
ASCII reserves the first 32 codes (numbers 0–31 decimal) for control characters known as the "C0 set": codes originally intended not to represent printable information, but rather to control devices (such as printers) that make use of ASCII, or to provide meta-information about data streams such as those stored on magnetic tape. They include common characters like the newline and the tab character.

In 8-bit character sets such as Latin-1 and the other ISO 8859 sets, the first 32 characters of the "upper half" (128 to 159) are also control codes, known as the "C1 set". They are rarely used directly; when they turn up in documents which are ostensibly in an ISO 8859 encoding, their code positions generally refer instead to the characters at that position in a proprietary, system-specific encoding, such as Windows-1252 or Mac OS Roman, that use the codes to instead provide additional graphic characters.

Main article: Unicode control characters
Unicode defines additional control characters, including bi-directional text direction override characters (used to explicitly mark right-to-left writing inside left-to-right writing and the other way around) and variation selectors to select alternate forms of CJK ideographs, emoji and other characters.

See also
Plaintext or cleartext, most commonly used in a cryptographic context
Binary file
Text file
Source code
Word wrap
References
 Coombs, James H.; Renear, Allen H.; DeRose, Steven J. (November 1987). "Markup systems and the future of scholarly text processing". Communications of the ACM. ACM. 30 (11): 933–947. doi:10.1145/32206.32209.
 The Unicode Standard, version 6.1, General Structure, page 14
 Coombs, James H.; Renear, Allen H.; DeRose, Steven J. (November 1987). "Markup systems and the future of scholarly text processing". Communications of the ACM. ACM. 30 (11): 933–947. doi:10.1145/32206.32209.
 Andrew Hunt, David Thomas. "The Pragmatic Programmer". 1999. Chapter 14: "The Power of Plain Text". p. 73.
[hide] v t e
Data types
Uninterpreted	
Bit Byte Trit Tryte Word Bit array
Numeric	
Arbitrary-precision or bignum Complex Decimal Fixed point Floating point Double precision Extended precision Half precision Long double Minifloat Octuple precision Quadruple precision Single precision Integer signedness Interval Rational
Pointer	
Address physical virtual Reference
Text	
Character String null-terminated
Composite	
Algebraic data type generalized Array Associative array Class Dependent Equality Inductive List Object metaobject Option type Product Record Set Union tagged
Other	
Boolean Bottom type Collection Enumerated type Exception Function type Opaque data type Recursive data type Semaphore Stream Top type Type class Unit type Void
Related
topics	
Abstract data type Data structure Generic Kind metaclass Parametric polymorphism Primitive data type Protocol interface Subtyping Type constructor Type conversion Type system Type theory
See also platform-dependent and independent units of information
Categories: Text file formatsOpen formats
Navigation menu
Not logged inTalkContributionsCreate accountLog inArticleTalkReadEditView historySearch

Search Wikipedia
Main page
Contents
Featured content
Current events
Random article
Donate to Wikipedia
Wikipedia store
Interaction
Help
About Wikipedia
Community portal
Recent changes
Contact page
Tools
What links here
Related changes
Upload file
Special pages
Permanent link
Page information
Wikidata item
Cite this page
Print/export
Create a book
Download as PDF
Printable version

Languages
العربية
Deutsch
Español
Français
한국어
Bahasa Indonesia
Italiano
Русский
Tiếng Việt
17 more
Edit links
This page was last edited on 5 May 2018, at 20:16.
Text is available under the Creative Commons Attribution-ShareAlike License; additional terms may apply. By using this site, you agree to the Terms of Use and Privacy Policy. Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a non-profit organization.
Privacy policyAbout WikipediaDisclaimersContact WikipediaDevelopersCookie statementMobile viewWikimedia Foundation Powered by MediaWiki


Formatted text
From Wikipedia, the free encyclopedia
  (Redirected from Rich text)
Not to be confused with Text formatting.
Formatted text, styled text, or rich text, as opposed to plain text, has styling information beyond the minimum of semantic elements: colours, styles (boldface, italic), sizes, and special features in HTML (such as hyperlinks).

Contents 
1	Terminology
2	Beginnings of formatted text
3	Markup languages
4	Formatted document files
5	See also
6	External links
Terminology
Formatted text cannot rightly be identified with binary files or be distinct from ASCII text. This is because formatted text is not necessarily binary, it may be text-only, such as HTML, RTF or enriched text files, and it may be ASCII-only. Conversely, a plain text file may be non-ASCII (in an encoding such as Unicode UTF-8). Text-only formatted text is achieved by markup which too is textual, while some editors of formatted text like Microsoft Word save in a binary format.

Beginnings of formatted text
Formatted text has its genesis in the pre-computer use of underscoring to embolden passages in typewritten manuscripts. In the first interactive systems of early computer technology, underscoring was not possible, and users made up for this lack (and the lack of formatting in ASCII) by using certain symbols as substitutes. Emphasis, for example, could be achieved in ASCII in a number of ways:

Capitalization: I am NOT making this up.
Surrounding with underscores: I am _not_ making this up.
Surrounding with asterisks: I am *not* making this up.
Spacing: I am n o t making this up.
Surrounding by underscores was also used for book titles: Look it up in _The_C_Programming_Language_.

Markup languages
Main article: Markup languages
Formatting can be marked by tags distinguished from the body text by special characters, such as angle brackets in HTML. For example, this text:

The dog is classified as Canis lupus familiaris in taxonomy.
is marked up in HTML thus:

<p>The dog is classified as <i>Canis lupus familiaris</i> in taxonomy.</p>
The italicised text is enclosed by an opening and a closing italics tag. In LaTeX, the text would be marked up like this:

 The dog is classified as \textit{Canis lupus familiaris} in taxonomy.
Markup languages can be implemented with any text editor, needing no special software.

Formatted document files
Since the invention of MacWrite, the first WYSIWYG word processor, in which the typist codes the formatting visually rather than by inserting textual markup, word processors have tended to save to binary files. Opening such files with a text editor reveals the text embellished with various binary characters, either around the formatted areas (e.g. in WordPerfect) or separately, at the beginning or end of the file (e.g. in Microsoft Word).

Formatted text documents in binary files have, however, the disadvantages of formatting scope and secrecy. Whereas the extent of formatting is accurately marked in markup languages, WYSIWYG formatting is based on memory, that is, keeping for example your pressing of the boldface button until cancelled. This can lead to formatting mistakes and maintenance troubles. As for secrecy, formatted text document file formats tend to be proprietary and undocumented, leading to difficulty in coding compatibility by third parties, and also to unnecessary upgrades because of version changes.

WordStar was a popular word processor that did not use binary files with hidden characters.

OpenOffice.org Writer saves files in an XML format. However, the resultant file is a binary since it is compressed (a tarball equivalent).

PDF is another formatted text file format that is usually binary (using compression for the text, and storing graphics and fonts in binary). It is generally an end-user format, written from an application such as Microsoft Word or OpenOffice.org Writer, and not editable by the user once done.

See also
Text encoding
Online rich-text editor
Prepress
External links
Word Processors: Stupid and Inefficient by Allin Cottrell (opinion piece)
Categories: Computer file formatsPublishing
Navigation menu
Not logged inTalkContributionsCreate accountLog inArticleTalkReadEditView historySearch

Search Wikipedia
Main page
Contents
Featured content
Current events
Random article
Donate to Wikipedia
Wikipedia store
Interaction
Help
About Wikipedia
Community portal
Recent changes
Contact page
Tools
What links here
Related changes
Upload file
Special pages
Permanent link
Page information
Wikidata item
Cite this page
Print/export
Create a book
Download as PDF
Printable version

Languages
Български
Čeština
Español
فارسی
Italiano
Bahasa Melayu
Nederlands
Tiếng Việt
中文
Edit links
This page was last edited on 5 May 2018, at 23:48.
Text is available under the Creative Commons Attribution-ShareAlike License; additional terms may apply. By using this site, you agree to the Terms of Use and Privacy Policy. Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a non-profit organization.
Privacy policyAbout WikipediaDisclaimersContact WikipediaDevelopersCookie statementMobile viewWikimedia Foundation Powered by MediaWiki
